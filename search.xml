<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git cherry-pick 操作</title>
      <link href="/2022/10/27/git-cherry-pick-%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/10/27/git-cherry-pick-%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>对于多分支的代码库，将代码从一个分支转移到另一个分支是常见需求。</p><p>这时分两种情况。一种情况是，你需要另一个分支的所有代码变动，那么就采用合并（git merge）。另一种情况是，你只需要部分代码变动（某几个提交），这时可以采用 Cherry pick。</p><p><img src="/images/pasted-26.png" alt="upload successful"></p><p>git cherry-pick命令的作用，就是将指定的提交（commit）应用于其他分支。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick &lt;commitHash&gt;</span><br></pre></td></tr></table></figure><p>上面命令就会将指定的提交commitHash，应用于当前分支。这会在当前分支产生一个新的提交，当然它们的哈希值会不一样。</p><p>举例来说，代码仓库有master和feature两个分支。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a - b - c - d   Master</span><br><span class="line">     \</span><br><span class="line">       e - f - g Feature</span><br></pre></td></tr></table></figure><p>现在将提交f应用到master分支。</p><h1 id="切换到-master-分支"><a href="#切换到-master-分支" class="headerlink" title="切换到 master 分支"></a>切换到 master 分支</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure><h1 id="Cherry-pick-操作"><a href="#Cherry-pick-操作" class="headerlink" title="Cherry pick 操作"></a>Cherry pick 操作</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick f</span><br></pre></td></tr></table></figure><p>上面的操作完成以后，代码库就变成了下面的样子。</p><pre><code>a - b - c - d - f   Master     \       e - f - g Feature</code></pre><p>从上面可以看到，master分支的末尾增加了一个提交f。</p><p>git cherry-pick命令的参数，不一定是提交的哈希值，分支名也是可以的，表示转移该分支的最新提交。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick feature</span><br></pre></td></tr></table></figure><p>上面代码表示将feature分支的最近一次提交，转移到当前分支。</p><p>Cherry pick 支持一次转移多个提交。</p><p>$ git cherry-pick <HashA> <HashB><br>上面的命令将 A 和 B 两个提交应用到当前分支。这会在当前分支生成两个对应的新提交。</p><p>如果想要转移一系列的连续提交，可以使用下面的简便语法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick A..B </span><br></pre></td></tr></table></figure><p>上面的命令可以转移从 A 到 B 的所有提交。它们必须按照正确的顺序放置：提交 A 必须早于提交 B，否则命令将失败，但不会报错。</p><p>注意，使用上面的命令，提交 A 将不会包含在 Cherry pick 中。如果要包含提交 A，可以使用下面的语法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick A^..B </span><br></pre></td></tr></table></figure><p>git cherry-pick命令的常用配置项如下。</p><p>（1）-e，–edit</p><p>打开外部编辑器，编辑提交信息。</p><p>（2）-n，–no-commit</p><p>只更新工作区和暂存区，不产生新的提交。</p><p>（3）-x</p><p>在提交信息的末尾追加一行(cherry picked from commit …)，方便以后查到这个提交是如何产生的。</p><p>（4）-s，–signoff</p><p>在提交信息的末尾追加一行操作者的签名，表示是谁进行了这个操作。</p><p>（5）-m parent-number，–mainline parent-number</p><p>如果原始提交是一个合并节点，来自于两个分支的合并，那么 Cherry pick 默认将失败，因为它不知道应该采用哪个分支的代码变动。</p><p>-m配置项告诉 Git，应该采用哪个分支的变动。它的参数parent-number是一个从1开始的整数，代表原始提交的父分支编号。</p><p>$ git cherry-pick -m 1 <commitHash><br>上面命令表示，Cherry pick 采用提交commitHash来自编号1的父分支的变动。</p><p>一般来说，1号父分支是接受变动的分支（the branch being merged into），2号父分支是作为变动来源的分支（the branch being merged from）。</p><p>如果操作过程中发生代码冲突，Cherry pick 会停下来，让用户决定如何继续操作。</p><p>（1）–continue</p><p>用户解决代码冲突后，第一步将修改的文件重新加入暂存区（git add .），第二步使用下面的命令，让 Cherry pick 过程继续执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick --continue</span><br></pre></td></tr></table></figure><p>（2）–abort</p><p>发生代码冲突后，放弃合并，回到操作前的样子。</p><p>（3）–quit</p><p>发生代码冲突后，退出 Cherry pick，但是不回到操作前的样子。</p><p>Cherry pick 也支持转移另一个代码库的提交，方法是先将该库加为远程仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add target git://gitUrl</span><br></pre></td></tr></table></figure><p>上面命令添加了一个远程仓库target。</p><p>然后，将远程代码抓取到本地。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch target</span><br></pre></td></tr></table></figure><p>上面命令将远程代码仓库抓取到本地。</p><p>接着，检查一下要从远程仓库转移的提交，获取它的哈希值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log target/master</span><br></pre></td></tr></table></figure><p>最后，使用git cherry-pick命令转移提交。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick &lt;commitHash&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用 three 绘制图片以及标注数据</title>
      <link href="/2022/07/28/%E5%88%A9%E7%94%A8-three-%E7%BB%98%E5%88%B6%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E6%A0%87%E6%B3%A8%E6%95%B0%E6%8D%AE/"/>
      <url>/2022/07/28/%E5%88%A9%E7%94%A8-three-%E7%BB%98%E5%88%B6%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E6%A0%87%E6%B3%A8%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><div align=center><img src='https://blog-image-rosy.vercel.app/cover/imageResult.png'/></div><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>最开始想的是用 canvas 绘制的，因为 canvas 不需要还是比较方便和小的，但是考虑到后续可能会有手动标注的部分，而且 three 功能很全什么形状都可以绘制而且为了技术统一性，索性就用了 three 去绘制图像和标注结果</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>废话不多说 最后封装的成品代码如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Viewer</span> &#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">height</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">ref</span>: <span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">options: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    options = options || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">width</span> = options.<span class="property">width</span> || <span class="number">1280</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">height</span> = options.<span class="property">height</span> || <span class="number">720</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ref</span> = options.<span class="property">ref</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">_render</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_scene</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  init = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> renderer = <span class="variable language_">this</span>.<span class="title function_">initRender</span>();</span><br><span class="line">    <span class="keyword">const</span> scene = <span class="variable language_">this</span>.<span class="title function_">initScene</span>();</span><br><span class="line">    <span class="keyword">const</span> camera = <span class="variable language_">this</span>.<span class="title function_">initCamera</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_render</span> = render;</span><br><span class="line"></span><br><span class="line">    scene.<span class="title function_">add</span>(camera);</span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置背景颜色</span></span><br><span class="line">  initRender = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123; <span class="attr">antialias</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">    renderer.<span class="title function_">setSize</span>(<span class="variable language_">this</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">height</span>);</span><br><span class="line">    <span class="comment">// renderer.setClearColor(0xffffff, 0.1);</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ref</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ref</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> renderer;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initScene = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"></span><br><span class="line">    scene.<span class="property">autoUpdate</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> = scene;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> scene;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initCamera = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">      <span class="number">45</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">width</span> / <span class="variable language_">this</span>.<span class="property">height</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">2000</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">880</span>);</span><br><span class="line">    camera.<span class="title function_">lookAt</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> camera;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 辅助线</span></span><br><span class="line">  addAxisHelper = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> axisHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">360</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(axisHelper);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawLabel = <span class="function">(<span class="params">position: <span class="built_in">any</span>, label: <span class="built_in">string</span>, color?: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">canvas</span>: <span class="built_in">any</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    canvas.<span class="property">width</span> = <span class="number">40</span>;</span><br><span class="line">    canvas.<span class="property">height</span> = <span class="number">14</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">ctx</span>: <span class="built_in">any</span> = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = color || <span class="string">&#x27;#fe0101&#x27;</span>;</span><br><span class="line">    ctx.<span class="property">font</span> = <span class="string">&#x27;Bold 14px 宋体&#x27;</span>;</span><br><span class="line">    ctx.<span class="title function_">fillText</span>(label, <span class="number">0</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CanvasTexture</span>(canvas);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SpriteMaterial</span>(&#123; <span class="attr">map</span>: texture &#125;);</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Sprite</span>(material);</span><br><span class="line"></span><br><span class="line">    text.<span class="property">position</span>.<span class="title function_">set</span>(position.<span class="property">x</span> - <span class="number">640</span>, -position.<span class="property">y</span> + <span class="number">360</span> - <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    text.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">40</span>, <span class="number">20</span>, <span class="number">1</span>);</span><br><span class="line">    canvas = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawBox = <span class="function">(<span class="params">position: <span class="built_in">any</span>, dimension: <span class="built_in">any</span>, color?: <span class="built_in">string</span>, label?: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(dimension.<span class="property">x</span>, dimension.<span class="property">y</span>);</span><br><span class="line">    <span class="keyword">const</span> edges = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">EdgesGeometry</span>(geometry);</span><br><span class="line">    <span class="keyword">const</span> edgesMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">color</span>: color || <span class="number">0xff0000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> plane = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineSegments</span>(edges, edgesMaterial);</span><br><span class="line"></span><br><span class="line">    plane.<span class="property">position</span>.<span class="title function_">set</span>(position.<span class="property">x</span> - <span class="number">640</span>, -position.<span class="property">y</span> + <span class="number">360</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(plane);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (label) &#123;</span><br><span class="line">      <span class="keyword">const</span> text = <span class="variable language_">this</span>.<span class="title function_">drawLabel</span>(position, label, color);</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(text);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawPoints = <span class="function">(<span class="params">data: &#123; points: <span class="built_in">string</span>; label: <span class="built_in">string</span>; color: <span class="built_in">string</span> &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">points</span>: _points, label, color &#125; = data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!_points) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> position = &#123;</span><br><span class="line">      <span class="attr">x</span>: +_points.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>],</span><br><span class="line">      <span class="attr">y</span>: +_points.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>],</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CircleGeometry</span>(<span class="number">5</span>, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123; <span class="attr">color</span>: color || <span class="number">0xff0000</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geometry, material);</span><br><span class="line"></span><br><span class="line">    points.<span class="property">position</span>.<span class="title function_">set</span>(position.<span class="property">x</span> - <span class="number">640</span>, -position.<span class="property">y</span> + <span class="number">360</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (label) &#123;</span><br><span class="line">      <span class="keyword">const</span> text = <span class="variable language_">this</span>.<span class="title function_">drawLabel</span>(position, label, color);</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(text);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(points);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawPolyline = <span class="function">(<span class="params">points: <span class="built_in">any</span>, color?: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!points) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> curveArr = points.<span class="title function_">map</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(</span><br><span class="line">        +item.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>] - <span class="number">640</span>,</span><br><span class="line">        +item.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>] - <span class="number">360</span>,</span><br><span class="line">      );</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SplineCurve</span>(curveArr);</span><br><span class="line">    <span class="keyword">const</span> _points = curve.<span class="title function_">getPoints</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(_points);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123; <span class="attr">color</span>: color || <span class="number">0xff0000</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> splineObject = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geometry, material);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(splineObject);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawMarker = <span class="function">(<span class="params">data: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// this._scene &amp;&amp; this.addAxisHelper();</span></span><br><span class="line">    <span class="keyword">if</span> (!data) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; location, points, box, polyline &#125; = data;</span><br><span class="line"></span><br><span class="line">    points &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">drawPoints</span>(points);</span><br><span class="line">    box &amp;&amp;</span><br><span class="line">      box.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; xbr, xtl, ybr, ytl, color, label &#125; = item;</span><br><span class="line">        <span class="keyword">const</span> position = &#123;</span><br><span class="line">          <span class="attr">x</span>: (+xtl + +xbr) / <span class="number">2</span>,</span><br><span class="line">          <span class="attr">y</span>: (+ytl + +ybr) / <span class="number">2</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">const</span> dimension = &#123;</span><br><span class="line">          <span class="attr">x</span>: <span class="title class_">Math</span>.<span class="title function_">abs</span>(xbr - xtl),</span><br><span class="line">          <span class="attr">y</span>: <span class="title class_">Math</span>.<span class="title function_">abs</span>(ybr - ytl),</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">drawBox</span>(position, dimension, color, label);</span><br><span class="line">      &#125;);</span><br><span class="line">    polyline &amp;&amp;</span><br><span class="line">      polyline.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; points, color &#125; = item;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">drawPolyline</span>(points, color);</span><br><span class="line">      &#125;);</span><br><span class="line">    location &amp;&amp;</span><br><span class="line">      location.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; position, dimension, color, label &#125; = item;</span><br><span class="line">        <span class="keyword">const</span> _position = &#123;</span><br><span class="line">          <span class="attr">x</span>: position.<span class="property">x</span> - dimension.<span class="property">x</span> / <span class="number">2</span>,</span><br><span class="line">          <span class="attr">y</span>: position.<span class="property">y</span> - dimension.<span class="property">y</span> / <span class="number">2</span>,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">drawBox</span>(_position, dimension, color, label);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_render</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_render</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  getImage2D = <span class="function">(<span class="params">path: <span class="built_in">string</span>, callback?: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> planeGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneBufferGeometry</span>(<span class="number">1280</span>, <span class="number">720</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(path, <span class="function"><span class="params">texture</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> planeMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">        <span class="attr">map</span>: texture,</span><br><span class="line">        <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">const</span> plane = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(planeGeometry, planeMaterial);</span><br><span class="line"></span><br><span class="line">      plane.<span class="property">renderOrder</span> = -<span class="number">10</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(plane);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_render</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_render</span>();</span><br><span class="line">      callback &amp;&amp; <span class="title function_">callback</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="如何使用呢"><a href="#如何使用呢" class="headerlink" title="如何使用呢"></a>如何使用呢</h3><p>使用的代码如下，根据我们的业务场景把处理 loader 加载 pcd 文件的部分放到了外边文件中 下边代码中只有主要的逻辑</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Viewer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/viewers/pcdViewer&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 pcd 数据并返回 object3D 模型</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getPoints</span> = (<span class="params">path: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">  viewer.<span class="property">current</span>.<span class="property">_loader</span>.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">replaceHttpToHttps</span>(path),</span><br><span class="line">    <span class="function">(<span class="params">points: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// points.geometry.center();</span></span><br><span class="line">      points.<span class="property">material</span>.<span class="property">color</span>.<span class="title function_">setHex</span>(<span class="number">0xffffff</span>);</span><br><span class="line">      points.<span class="property">material</span>.<span class="property">vertexColors</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">      viewer.<span class="property">current</span>.<span class="title function_">removePoints</span>();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (colorMap.<span class="property">current</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> position = points.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">array</span>;</span><br><span class="line">        <span class="keyword">const</span> size = points.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">count</span>;</span><br><span class="line">        <span class="keyword">const</span> colors =</span><br><span class="line">          colorMap.<span class="property">current</span> &amp;&amp;</span><br><span class="line">          viewer.<span class="property">current</span>.<span class="title function_">addColors</span>(position, size, colorMap.<span class="property">current</span>);</span><br><span class="line"></span><br><span class="line">        points.<span class="property">geometry</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;color&#x27;</span>, colors);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      viewer.<span class="property">current</span>.<span class="title function_">addPoints</span>(points);</span><br><span class="line">      viewer.<span class="property">current</span>.<span class="title function_">_render</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">xhr: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">loaded</span> / xhr.<span class="property">total</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error: <span class="built_in">Error</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;An error happened the content is: &#x27;</span>, error);</span><br><span class="line">    &#125;,</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 视图</span></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">height</span>: h, <span class="attr">width</span>: w &#125; =</span><br><span class="line">      threeRef.<span class="property">current</span> &amp;&amp; threeRef.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line"></span><br><span class="line">    viewer.<span class="property">current</span> = <span class="keyword">new</span> <span class="title class_">Viewer</span>(&#123;</span><br><span class="line">      <span class="attr">width</span>: w,</span><br><span class="line">      <span class="attr">height</span>: h,</span><br><span class="line">      <span class="attr">ref</span>: threeRef.<span class="property">current</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getPoints</span>(path);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    colorMap.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">    threeRef.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">    viewer.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// return</span></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ThreeWrapper</span> <span class="attr">ref</span>=<span class="string">&#123;threeRef&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;loading ? (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">PointLoading</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">position:</span> &#x27;<span class="attr">absolute</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">top:</span> <span class="attr">0</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">zIndex:</span> <span class="attr">10</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">modalStyle</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">opacity:</span> <span class="attr">0.6</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">background:</span> &#x27;#<span class="attr">000</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tip</span>=<span class="string">&quot;加载中...&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      ) : null&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ColorMap</span> <span class="attr">onChange</span>=<span class="string">&#123;handleColorMapChange&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThreeWrapper</span>&gt;</span></span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> threejs </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 three 可视化pcd文件的自动驾驶数据</title>
      <link href="/2022/07/28/%E5%88%A9%E7%94%A8-three-%E5%8F%AF%E8%A7%86%E5%8C%96pcd%E6%96%87%E4%BB%B6%E7%9A%84%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%95%B0%E6%8D%AE/"/>
      <url>/2022/07/28/%E5%88%A9%E7%94%A8-three-%E5%8F%AF%E8%A7%86%E5%8C%96pcd%E6%96%87%E4%BB%B6%E7%9A%84%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><div align=center><img src='https://blog-image-rosy.vercel.app/cover/pointCould.png'/></div><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>我们现在项目所使用的点云的文件是 pcd 格式的，我们点云选取的可视化方式是使用 threejs 的 pcdloader，不过 pcdloader 的作用是分析 pcd 二进制结构并返回一个 Object3D 实例。该 Object3D 实例实际类型为 Points，由一个 BufferGeometry 实例和一个 PointsMaterial 实例作为参数构造而成的，所以这种点云是没有色彩的点云，是只有一种颜色的点云，所以为了更够更清楚的展示我们的点云，所以我们要根据 positions 自己计算出点云的颜色，并映射出来。然后我们把这个最后再通过 three 搭建场景、相机、控制器、渲染器的方式渲染出来就是我们看到的点云了</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>废话不多说 最后封装的成品代码如下</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line"><span class="comment">// import &#123; TrackballControls &#125; from &#x27;three/examples/jsm/controls/TrackballControls.js&#x27;;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PCDLoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/loaders/PCDLoader.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Viewer</span> &#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">height</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">ref</span>: <span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">options: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    options = options || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">width</span> = options.<span class="property">width</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">height</span> = options.<span class="property">height</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ref</span> = options.<span class="property">ref</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">_scene</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_render</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_points</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_camera</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_loader</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_controls</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">_renderer</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  init = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> renderer = <span class="variable language_">this</span>.<span class="title function_">initRender</span>();</span><br><span class="line">    <span class="keyword">const</span> scene = <span class="variable language_">this</span>.<span class="title function_">initScene</span>();</span><br><span class="line">    <span class="keyword">const</span> camera = <span class="variable language_">this</span>.<span class="title function_">initCamera</span>();</span><br><span class="line">    <span class="keyword">const</span> light = <span class="variable language_">this</span>.<span class="title function_">initLight</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_render</span> = render;</span><br><span class="line"></span><br><span class="line">    scene.<span class="title function_">add</span>(camera);</span><br><span class="line">    scene.<span class="title function_">add</span>(light);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initControls</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">animate</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initLoader</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="variable language_">this</span>.<span class="property">debounceOnWindowResize</span>);</span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  onWindowResize = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">height</span>: h, <span class="attr">width</span>: w &#125; =</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">ref</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ref</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">height</span> = h;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">width</span> = w;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_camera</span>.<span class="property">aspect</span> = w / h;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_camera</span>.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_renderer</span>.<span class="title function_">setSize</span>(w, h);</span><br><span class="line">  &#125;;</span><br><span class="line">  debounceOnWindowResize = <span class="title function_">debounce</span>(<span class="variable language_">this</span>.<span class="property">onWindowResize</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">  animate = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//更新控制器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_controls</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">_controls</span>.<span class="title function_">update</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_render</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_render</span>();</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable language_">this</span>.<span class="property">animate</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置背景颜色</span></span><br><span class="line">  initRender = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123; <span class="attr">antialias</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">    renderer.<span class="title function_">setSize</span>(<span class="variable language_">this</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">height</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ref</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ref</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_renderer</span> = renderer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> renderer;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initControls = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_controls</span> = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(<span class="variable language_">this</span>.<span class="property">_camera</span>, <span class="variable language_">this</span>.<span class="property">_renderer</span>.<span class="property">domElement</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// use if there is no animation loop</span></span><br><span class="line">    <span class="comment">// controls.addEventListener(&#x27;change&#x27;, render);</span></span><br><span class="line">    <span class="comment">// controls.update();</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initLoader = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_loader</span> = <span class="keyword">new</span> <span class="title class_">PCDLoader</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initScene = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"></span><br><span class="line">    scene.<span class="property">autoUpdate</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> = scene;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">addAxisHelper</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> scene;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initLight = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="number">0xffffff</span>);</span><br><span class="line"></span><br><span class="line">    light.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> light;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  initCamera = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">      <span class="number">45</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">width</span> / <span class="variable language_">this</span>.<span class="property">height</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">10000</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    camera.<span class="property">position</span>.<span class="title function_">set</span>(-<span class="number">100</span>, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">    camera.<span class="property">up</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    camera.<span class="title function_">lookAt</span>(<span class="number">200</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_camera</span> = camera;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> camera;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  addPoints = <span class="function">(<span class="params">points: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_points</span> = points;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(<span class="variable language_">this</span>.<span class="property">_points</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  removePoints = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">remove</span>(<span class="variable language_">this</span>.<span class="property">_points</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 辅助线</span></span><br><span class="line">  addAxisHelper = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> axisHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(axisHelper);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawBox = <span class="function">(<span class="params">data: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">_scene</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">addAxisHelper</span>();</span><br><span class="line">    <span class="keyword">if</span> (!data || data.<span class="property">length</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(</span><br><span class="line">        item?.<span class="property">scale</span>?.<span class="property">x</span>,</span><br><span class="line">        item?.<span class="property">scale</span>?.<span class="property">y</span>,</span><br><span class="line">        item?.<span class="property">scale</span>?.<span class="property">z</span>,</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geometry);</span><br><span class="line"></span><br><span class="line">      item?.<span class="property">rotation</span> &amp;&amp;</span><br><span class="line">        mesh.<span class="property">rotation</span>.<span class="title function_">set</span>(item.<span class="property">rotation</span>?.<span class="property">x</span>, item.<span class="property">rotation</span>?.<span class="property">y</span>, item.<span class="property">rotation</span>?.<span class="property">z</span>);</span><br><span class="line">      item?.<span class="property">position</span> &amp;&amp;</span><br><span class="line">        mesh.<span class="property">position</span>.<span class="title function_">set</span>(item.<span class="property">position</span>?.<span class="property">x</span>, item.<span class="property">position</span>?.<span class="property">y</span>, item.<span class="property">position</span>?.<span class="property">z</span>);</span><br><span class="line">      <span class="keyword">const</span> box = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxHelper</span>(mesh, <span class="number">0x00ff00</span>);</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(box);</span><br><span class="line">      <span class="keyword">if</span> (item?.<span class="property">category</span> &amp;&amp; item?.<span class="property">position</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> label = <span class="variable language_">this</span>.<span class="title function_">drawLabel</span>(</span><br><span class="line">          item?.<span class="property">position</span>,</span><br><span class="line">          item?.<span class="property">category</span>,</span><br><span class="line">          item?.<span class="property">scale</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(label);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawLine = <span class="function">(<span class="params">data: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!data || data.<span class="property">length</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123;</span><br><span class="line">        <span class="attr">color</span>: item?.<span class="property">color</span> || <span class="number">0xffff00</span>,</span><br><span class="line">        <span class="attr">linewidth</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">linecap</span>: <span class="string">&#x27;round&#x27;</span>, <span class="comment">//ignored by WebGLRenderer</span></span><br><span class="line">        <span class="attr">linejoin</span>: <span class="string">&#x27;round&#x27;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">      <span class="keyword">const</span> pointsArray = item?.<span class="property">points</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">points: <span class="built_in">number</span>[]</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(...points);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      geometry.<span class="title function_">setFromPoints</span>(pointsArray);</span><br><span class="line">      <span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geometry, material);</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_scene</span>.<span class="title function_">add</span>(line);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  drawLabel = <span class="function">(<span class="params">position: <span class="built_in">any</span>, label: <span class="built_in">string</span>, color?: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    canvas.<span class="property">width</span> = <span class="number">40</span>;</span><br><span class="line">    canvas.<span class="property">height</span> = <span class="number">14</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">ctx</span>: <span class="built_in">any</span> = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = color || <span class="string">&#x27;#fe0101&#x27;</span>;</span><br><span class="line">    ctx.<span class="property">font</span> = <span class="string">&#x27;Bold 14px 宋体&#x27;</span>;</span><br><span class="line">    ctx.<span class="title function_">fillText</span>(label, <span class="number">0</span>, <span class="number">14</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas);</span><br><span class="line">    <span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CanvasTexture</span>(canvas);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SpriteMaterial</span>(&#123; <span class="attr">map</span>: texture &#125;);</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Sprite</span>(material);</span><br><span class="line"></span><br><span class="line">    text.<span class="property">position</span>.<span class="title function_">set</span>(position.<span class="property">x</span>, position.<span class="property">y</span>, position.<span class="property">z</span>);</span><br><span class="line">    text.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  addColors = <span class="function">(<span class="params">position: <span class="built_in">number</span>[], size: <span class="built_in">number</span>, colormapCtx: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> values = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> index = i * <span class="number">3</span> + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">      values.<span class="title function_">push</span>(position[index]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> max = -<span class="title class_">Infinity</span>;</span><br><span class="line">    <span class="keyword">let</span> min = <span class="title class_">Infinity</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> values) &#123;</span><br><span class="line">      <span class="keyword">if</span> (max &lt; i) max = i;</span><br><span class="line">      <span class="keyword">if</span> (min &gt; i) min = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(size * <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>(((values[i] - min) / (max - min)) * <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">isFinite</span>(index)) index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">const</span> data = colormapCtx.<span class="title function_">getImageData</span>(index, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>).<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">      colors[i * <span class="number">3</span> + <span class="number">0</span>] = data[<span class="number">0</span>] / <span class="number">255.0</span>;</span><br><span class="line">      colors[i * <span class="number">3</span> + <span class="number">1</span>] = data[<span class="number">1</span>] / <span class="number">255.0</span>;</span><br><span class="line">      colors[i * <span class="number">3</span> + <span class="number">2</span>] = data[<span class="number">2</span>] / <span class="number">255.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="如果使用呢"><a href="#如果使用呢" class="headerlink" title="如果使用呢"></a>如果使用呢</h3><p>使用的代码如下，根据我们的业务场景把处理 loader 加载 pcd 文件的部分放到了外边文件中 下边代码中只有主要的逻辑</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Viewer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/viewers/pcdViewer&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 视图</span></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  viewer.<span class="property">current</span> = <span class="keyword">new</span> <span class="title class_">Viewer</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">1280</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">720</span>,</span><br><span class="line">    <span class="attr">ref</span>: slideRef.<span class="property">current</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  viewer.<span class="property">current</span>?.<span class="title function_">getImage2D</span>(path, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="title function_">setIsLoading</span>(<span class="literal">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    slideRef.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">    viewer.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// return</span></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ImageWrapper</span> <span class="attr">margin</span>=<span class="string">&#123;margin&#125;</span> <span class="attr">width</span>=<span class="string">&#123;width&#125;</span> <span class="attr">height</span>=<span class="string">&#123;height&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ImageContent</span> <span class="attr">ref</span>=<span class="string">&#123;slideRef&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ImageWay</span>&gt;</span>&#123;ids[currentCamera]&#125;<span class="tag">&lt;/<span class="name">ImageWay</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;isLoading ? (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">PointLoading</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">position:</span> &#x27;<span class="attr">absolute</span>&#x27;, <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">100</span>%&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        ) : null&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;isEmpty ? (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">src</span>=<span class="string">&#123;emptyPng&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">height</span>=<span class="string">&#123;height&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">position:</span> &#x27;<span class="attr">absolute</span>&#x27;, <span class="attr">top:</span> &#x27;<span class="attr">0</span>&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        ) : null&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ImageContent</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ImageWrapper</span>&gt;</span></span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> threejs </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点云赋色</title>
      <link href="/2022/07/08/%E7%82%B9%E4%BA%91%E8%B5%8B%E8%89%B2/"/>
      <url>/2022/07/08/%E7%82%B9%E4%BA%91%E8%B5%8B%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>需求是这样的，我们现在项目所使用的点云的文件是 pcd 格式的，我们点云选取的可视化方式是使用 threejs 的pcdloader，不过 pcdloader 的作用是分析 pcd 二进制结构并返回一个 Object3D 实例。该 Object3D 实例实际类型为 Points，由一个 BufferGeometry 实例和一个 PointsMaterial 实例作为参数构造而成的，所以这种点云是没有色彩的点云，是只有一种颜色的点云，所以为了更够更清楚的展示我们的点云，所以我们要根据 positions 自己计算出点云的颜色，并映射出来。</p><h3 id="点云颜色映射的方式"><a href="#点云颜色映射的方式" class="headerlink" title="点云颜色映射的方式"></a>点云颜色映射的方式</h3><p>是通过 几张预设得到 colorMap 的图片然后利用 canvas 绘制出来，然后再根据点云信息中的 x，y，z或者 FIELDS 中的其他值映射出来的</p><h3 id="colorMap-组件代码"><a href="#colorMap-组件代码" class="headerlink" title="colorMap 组件代码"></a>colorMap 组件代码</h3><p>colorMap组件的作用是生成点云映射颜色的 map 信息</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.tsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">FC</span>, useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">ColorMapList</span>,</span><br><span class="line">  <span class="title class_">ColorMapCurrent</span>,</span><br><span class="line">  <span class="title class_">ColorMapCanvas</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;./styled&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> whiteUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_white.png&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> rainbowUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_rainbow.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> boneUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_bone.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> coolUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_cool.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> hotUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_hot.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> hsvUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_hsv.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> jetUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_jet.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> oceanUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_ocean.jpg&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> parulaUri <span class="keyword">from</span> <span class="string">&#x27;@/assets/colorMap/colorscale_parula.jpg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> colorMaps = [</span><br><span class="line">  whiteUri,</span><br><span class="line">  rainbowUri,</span><br><span class="line">  boneUri,</span><br><span class="line">  coolUri,</span><br><span class="line">  hotUri,</span><br><span class="line">  hsvUri,</span><br><span class="line">  jetUri,</span><br><span class="line">  oceanUri,</span><br><span class="line">  parulaUri,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  <span class="attr">onChange</span>: <span class="function">(<span class="params">data: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ColorMap</span>: <span class="variable constant_">FC</span>&lt;<span class="title class_">Props</span>&gt; = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; onChange &#125; = props;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">colorMap</span>: <span class="built_in">any</span> = <span class="title function_">useRef</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleChangeColor</span> = (<span class="params">index: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (colorMap.<span class="property">current</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> colormapCtx = colorMap.<span class="property">current</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> <span class="attr">img</span>: <span class="built_in">any</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">`colorMap<span class="subst">$&#123;index&#125;</span>`</span>);</span><br><span class="line">      img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        colormapCtx.<span class="title function_">drawImage</span>(img, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      &#125;;</span><br><span class="line">      colormapCtx.<span class="title function_">drawImage</span>(img, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      onChange &amp;&amp; <span class="title function_">onChange</span>(colormapCtx);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">handleChangeColor</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ColorMapCurrent</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ColorMapList</span> <span class="attr">className</span>=<span class="string">&quot;colorMapList&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;colorMaps.map((item, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">key</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                handleChangeColor(index);</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;item&#125;</span> <span class="attr">id</span>=<span class="string">&#123;</span>`<span class="attr">colorMap</span>$&#123;<span class="attr">index</span>&#125;`&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          );</span></span><br><span class="line"><span class="language-xml">        &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ColorMapList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ColorMapCanvas</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">id</span>=<span class="string">&quot;colorMap&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">ref</span>=<span class="string">&#123;colorMap&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;256px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">height</span>=<span class="string">&quot;10px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">ColorMapCanvas</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ColorMapCurrent</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ColorMap</span>;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// styled.tsx</span></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ColorMapList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  bottom: 42px;</span></span><br><span class="line"><span class="string">  z-index: 1;</span></span><br><span class="line"><span class="string">  &amp; &gt; div &#123;</span></span><br><span class="line"><span class="string">    background-color: rgba(255, 255, 255, 0.3);</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    width: calc(256px + 32px);</span></span><br><span class="line"><span class="string">    height: calc(10px + 32px);</span></span><br><span class="line"><span class="string">    z-index: 1;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &amp; &gt; div:hover &#123;</span></span><br><span class="line"><span class="string">    background-color: rgba(255, 255, 255, 0.8);</span></span><br><span class="line"><span class="string">    cursor: pointer;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &amp; &gt; div &gt; img &#123;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    top: 16px;</span></span><br><span class="line"><span class="string">    left: 16px;</span></span><br><span class="line"><span class="string">    width: 256px;</span></span><br><span class="line"><span class="string">    height: 10px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ColorMapCurrent</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: 16px;</span></span><br><span class="line"><span class="string">  bottom: 16px;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  width: calc(256px + 32px);</span></span><br><span class="line"><span class="string">  height: calc(10px + 32px);</span></span><br><span class="line"><span class="string">  z-index: 1;</span></span><br><span class="line"><span class="string">  &amp; &gt; .colorMapList &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    background-color: rgba(255, 255, 255, 0.2);</span></span><br><span class="line"><span class="string">    cursor: pointer;</span></span><br><span class="line"><span class="string">    .colorMapList &#123;</span></span><br><span class="line"><span class="string">      display: block;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ColorMapCanvas</span> = styled.<span class="property">canvas</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  width: 256px;</span></span><br><span class="line"><span class="string">  height: 10px;</span></span><br><span class="line"><span class="string">  z-index: 1;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在three-pcdLoader-中使用的代码"><a href="#在three-pcdLoader-中使用的代码" class="headerlink" title="在three pcdLoader 中使用的代码"></a>在three pcdLoader 中使用的代码</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">_points</span>: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">addColors</span> = (<span class="params"></span></span><br><span class="line"><span class="params">  position: <span class="built_in">number</span>[],</span></span><br><span class="line"><span class="params">  size: <span class="built_in">number</span>,</span></span><br><span class="line"><span class="params">  colormapCtx: <span class="built_in">any</span>,</span></span><br><span class="line"><span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> values = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> index = i * <span class="number">3</span> + <span class="number">2</span>;</span><br><span class="line">    values.<span class="title function_">push</span>(position[index]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> max = -<span class="title class_">Infinity</span>;</span><br><span class="line">  <span class="keyword">let</span> min = <span class="title class_">Infinity</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> values) &#123;</span><br><span class="line">    <span class="keyword">if</span> (max &lt; i) max = i;</span><br><span class="line">    <span class="keyword">if</span> (min &gt; i) min = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(size * <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>(((values[i] - min) / (max - min)) * <span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">isFinite</span>(index)) index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> data = colormapCtx.<span class="title function_">getImageData</span>(index, <span class="number">5</span>, <span class="number">1</span>, <span class="number">1</span>).<span class="property">data</span>;</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">0</span>] = data[<span class="number">0</span>] / <span class="number">255.0</span>;</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">1</span>] = data[<span class="number">1</span>] / <span class="number">255.0</span>;</span><br><span class="line">    colors[i * <span class="number">3</span> + <span class="number">2</span>] = data[<span class="number">2</span>] / <span class="number">255.0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getPoints</span> = (<span class="params">path: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">  _loader.<span class="title function_">load</span>(</span><br><span class="line">    <span class="title function_">replaceHttpToHttps</span>(path),</span><br><span class="line">    <span class="function">(<span class="params">points: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      points.<span class="property">material</span>.<span class="property">color</span>.<span class="title function_">setHex</span>(<span class="number">0xffffff</span>);</span><br><span class="line">      points.<span class="property">material</span>.<span class="property">vertexColors</span> = <span class="literal">true</span>;</span><br><span class="line">      _scene.<span class="title function_">remove</span>(_points);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> position = points.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">array</span>;</span><br><span class="line">      <span class="keyword">const</span> size = points.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">count</span>;</span><br><span class="line">      <span class="keyword">const</span> colors = <span class="title function_">addColors</span>(position, size, colorMap.<span class="property">current</span>);</span><br><span class="line">      points.<span class="property">geometry</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;color&#x27;</span>, colors);</span><br><span class="line"></span><br><span class="line">      _points = points;</span><br><span class="line">      _scene.<span class="title function_">add</span>(points);</span><br><span class="line">      <span class="title function_">_render</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">xhr: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">loaded</span> / xhr.<span class="property">total</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error: <span class="built_in">Error</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;An error happened the content is: &#x27;</span>, error);</span><br><span class="line">    &#125;,</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleColorMapChange</span> = (<span class="params">colormapCtx: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  colorMap.<span class="property">current</span> = colormapCtx;</span><br><span class="line">  <span class="keyword">const</span> position = _points?.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">array</span>;</span><br><span class="line">  <span class="keyword">const</span> size = _points?.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span>.<span class="property">count</span>;</span><br><span class="line">  <span class="keyword">const</span> colors = <span class="title function_">addColors</span>(position, size, colorMap.<span class="property">current</span>);</span><br><span class="line">  _points?.<span class="property">geometry</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;color&#x27;</span>, colors);</span><br><span class="line">  _render &amp;&amp; <span class="title function_">_render</span>();</span><br><span class="line">&#125;;</span><br><span class="line">  </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ColorMap</span> <span class="attr">onChange</span>=<span class="string">&#123;handleColorMapChange&#125;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><p>在项目中使用，以此记录一下</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> threejs </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>药方</title>
      <link href="/2022/07/06/%E8%8D%AF%E6%96%B9/"/>
      <url>/2022/07/06/%E8%8D%AF%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="扁桃体发炎、咽炎"><a href="#扁桃体发炎、咽炎" class="headerlink" title="扁桃体发炎、咽炎"></a>扁桃体发炎、咽炎</h3><ul><li>头孢呋辛酯片： 1片/次，2次/天</li><li>金银花颗粒：1包/次，3次/天</li></ul>]]></content>
      
      
      <categories>
          
          <category> 药方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 药方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>播放帧的进度条组件的封装</title>
      <link href="/2022/06/29/%E6%92%AD%E6%94%BE%E5%B8%A7%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%BB%84%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/"/>
      <url>/2022/06/29/%E6%92%AD%E6%94%BE%E5%B8%A7%E7%9A%84%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%BB%84%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="/images/pasted-5.png" alt="upload successful"><br>前边的一个一个的线是批量有效抽帧之后的效果 后边的绿色是全量有效的效果，然后红色为无效的效果</p><h3 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h3><p>在需求中遇见了开发点云播放器的场景，对于播放器，不可避免的要有进度条的元素存在，然后我们的进度条还需要在进度条上设置有效无效的 tag 来用红色和绿色来显示</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><p>第一个方案是：首先是一个 div 然后有onMouseDown，onMouseEnter两个事件，前者是为了点击进度条跳转，后者是为了鼠标悬浮在进度条是显示当前帧信息的，然后还有一个标度当前进度的点也是一个 dom 元素，利用监听当前帧来判断当前的位置并实时的改变，然后进度条上的帧的 tag 是直接插入了每帧的元素然后给了背景色来设置的，这样的一个问题就是，当帧的数据大于父元素的长度的时候就会出现挤压，然后当前帧 tag 的位置就会出现问题，而且插入的 dom 数量也着实有点多</p><h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><p>第二个方案是：和第一个方案不同的是创建了一个 canvas 标签来做我们的进度条，然后也是另一个单独的 dom 来标识当前的进度，然后在 tag 的部分做了处理是先判断当前有多少帧，然后根据 canvas 的长度以 3 像素每格计算出有多少个格子，然后帧和格子取小的，然后获取到每一格子有多少个宽，然后在 canvas 中绘制矩形的方式来绘制帧的 tag 的状态，有效为绿色无效为红色，矩形的宽为每格的宽，然后利用数据下标计算出格子的位置，用fillRect绘制图形</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getFrames</span> = (<span class="params">data: <span class="built_in">any</span>[], dom: Element, targetDom: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!data || data.<span class="property">length</span> &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> length = +data.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; width, height &#125; = dom.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算有多少格子</span></span><br><span class="line">  <span class="keyword">let</span> total = <span class="title class_">Math</span>.<span class="title function_">floor</span>(width / <span class="number">3</span>);</span><br><span class="line">  total = total &lt; length ? total : length;</span><br><span class="line">  <span class="keyword">const</span> itemWidth = width / total;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> ctx = targetDom.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">  ctx.<span class="property">canvas</span>.<span class="property">width</span> = width;</span><br><span class="line">  ctx.<span class="property">canvas</span>.<span class="property">height</span> = height;</span><br><span class="line">  <span class="keyword">if</span> (targetDom) &#123;</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      ctx.<span class="property">fillStyle</span> = +item?.<span class="property">status</span> ? <span class="string">&#x27;#1f8736&#x27;</span> : <span class="string">&#x27;#f70e0e&#x27;</span>;</span><br><span class="line">      ctx.<span class="title function_">fillRect</span>((index / length) * (width - itemWidth), <span class="number">0</span>, itemWidth, <span class="number">10</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="完整代码为"><a href="#完整代码为" class="headerlink" title="完整代码为"></a>完整代码为</h4><p>index.js</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">FC</span>, useEffect, useState, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; notice, <span class="title class_">CustomIcon</span>, <span class="title class_">TipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Typography</span>, <span class="title class_">Tag</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">ProgressWrapper</span>,</span><br><span class="line">  <span class="title class_">ProgressBar</span>,</span><br><span class="line">  <span class="title class_">ProgressLine</span>,</span><br><span class="line">  <span class="title class_">ProgressPoint</span>,</span><br><span class="line">  <span class="title class_">FrameInfo</span>,</span><br><span class="line">  <span class="title class_">Toolbar</span>,</span><br><span class="line">  <span class="title class_">Play</span>,</span><br><span class="line">  <span class="title class_">Speed</span>,</span><br><span class="line">  <span class="title class_">SpeedSelect</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;./styled&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FrameBasicData</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;moment&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; debounce, copyHandle &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getFrames</span> = (<span class="params">data: <span class="built_in">any</span>[], dom: Element, targetDom: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!data || data.<span class="property">length</span> &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> length = +data.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; width, height &#125; = dom.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算有多少格子</span></span><br><span class="line">  <span class="keyword">let</span> total = <span class="title class_">Math</span>.<span class="title function_">floor</span>(width / <span class="number">3</span>);</span><br><span class="line">  total = total &lt; length ? total : length;</span><br><span class="line">  <span class="keyword">const</span> itemWidth = width / total;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> ctx = targetDom.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">  ctx.<span class="property">canvas</span>.<span class="property">width</span> = width;</span><br><span class="line">  ctx.<span class="property">canvas</span>.<span class="property">height</span> = height;</span><br><span class="line">  <span class="keyword">if</span> (targetDom) &#123;</span><br><span class="line">    data.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      ctx.<span class="property">fillStyle</span> = +item?.<span class="property">status</span> ? <span class="string">&#x27;#1f8736&#x27;</span> : <span class="string">&#x27;#f70e0e&#x27;</span>;</span><br><span class="line">      ctx.<span class="title function_">fillRect</span>((index / length) * (width - itemWidth), <span class="number">0</span>, itemWidth, <span class="number">10</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> debounceGetFrames = <span class="title function_">debounce</span>(getFrames, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Text</span> &#125; = <span class="title class_">Typography</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> speedList = [</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">8</span> / <span class="number">1</span>, <span class="attr">value</span>: <span class="number">1</span> / <span class="number">8</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">4</span> / <span class="number">1</span>, <span class="attr">value</span>: <span class="number">1</span> / <span class="number">4</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">2</span> / <span class="number">1</span>, <span class="attr">value</span>: <span class="number">1</span> / <span class="number">2</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">3</span> / <span class="number">2</span>, <span class="attr">value</span>: <span class="number">2</span> / <span class="number">3</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">1</span> / <span class="number">1</span>, <span class="attr">value</span>: <span class="number">1</span> / <span class="number">1</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="number">1</span> / <span class="number">2</span>, <span class="attr">value</span>: <span class="number">2</span> / <span class="number">1</span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStatus</span> = (<span class="params">status: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> dom = <span class="language-xml"><span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;play&quot;</span> /&gt;</span></span>;</span><br><span class="line">  <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;playing&#x27;</span>:</span><br><span class="line">      dom = <span class="language-xml"><span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;pause&quot;</span> /&gt;</span></span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pause&#x27;</span>:</span><br><span class="line">      dom = <span class="language-xml"><span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;play&quot;</span> /&gt;</span></span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;replay&#x27;</span>:</span><br><span class="line">      dom = <span class="language-xml"><span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;replay&quot;</span> /&gt;</span></span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dom;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  <span class="attr">current</span>: <span class="built_in">number</span> | <span class="built_in">string</span>;</span><br><span class="line">  preloadSize?: <span class="built_in">number</span>;</span><br><span class="line">  totalElements?: <span class="built_in">number</span> | <span class="built_in">string</span>;</span><br><span class="line">  frameInfo?: <span class="title class_">FrameBasicData</span>[];</span><br><span class="line">  frameInfoConfig?: &#123; <span class="attr">key</span>: <span class="built_in">string</span>; <span class="attr">label</span>: <span class="built_in">string</span> &#125;[];</span><br><span class="line">  <span class="attr">onChange</span>: <span class="function">(<span class="params">val: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Progress</span>: <span class="variable constant_">FC</span>&lt;<span class="title class_">Props</span>&gt; = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    current,</span><br><span class="line">    preloadSize = <span class="number">20</span>,</span><br><span class="line">    frameInfo,</span><br><span class="line">    totalElements,</span><br><span class="line">    onChange,</span><br><span class="line">  &#125; = props;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">processRef</span>: <span class="built_in">any</span> = <span class="title function_">useRef</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">line</span>: <span class="built_in">any</span> = <span class="title function_">useRef</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">player</span>: <span class="built_in">any</span> = <span class="title function_">useRef</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [status, setStatus] = useState&lt;</span><br><span class="line">    <span class="string">&#x27;pause&#x27;</span> | <span class="string">&#x27;playing&#x27;</span> | <span class="string">&#x27;replay&#x27;</span> | <span class="string">&#x27;jumping&#x27;</span></span><br><span class="line">  &gt;(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> [jump, setJump] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> [speed, setSpeed] = <span class="title function_">useState</span>(&#123; <span class="attr">label</span>: <span class="number">1</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;);</span><br><span class="line">  <span class="keyword">const</span> [step, setStep] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> [count, setCount] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> [editSpeed, setEditSpeed] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> [isShowFrameInfo, setIsShowFrameInfo] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> [currentFrameInfo, setCurrentFrameInfo] = useState&lt;<span class="title class_">FrameBasicData</span>&gt;();</span><br><span class="line">  <span class="keyword">const</span> [frameInfoPosition, setFrameInfoPosition] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> [processLength, setProcessLength] = useState&lt;<span class="built_in">number</span> | <span class="built_in">string</span>&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> debounceSetCurrentFrameInfo = <span class="title function_">debounce</span>(setCurrentFrameInfo, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">next</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (step &gt; +current || +current - step &gt; preloadSize*<span class="number">2</span>) &#123;</span><br><span class="line">      <span class="title function_">pause</span>();</span><br><span class="line">      <span class="title function_">notice</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        <span class="attr">mes</span>: <span class="string">&#x27;正在加载中&#x27;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!jump) &#123;</span><br><span class="line">      <span class="title function_">setStep</span>(step + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">play</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (step === count - <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="title function_">pause</span>();</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="string">&#x27;replay&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    player.<span class="property">current</span> &amp;&amp; <span class="built_in">clearTimeout</span>(player.<span class="property">current</span>);</span><br><span class="line">    <span class="keyword">const</span> _player = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>();</span><br><span class="line">    &#125;, <span class="number">1000</span> * speed.<span class="property">value</span>);</span><br><span class="line">    player.<span class="property">current</span> = _player;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">replay</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setStep</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="title function_">play</span>();</span><br><span class="line">    <span class="title function_">setStatus</span>(<span class="string">&#x27;playing&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">pause</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    player.<span class="property">current</span> &amp;&amp; <span class="built_in">clearTimeout</span>(player.<span class="property">current</span>);</span><br><span class="line">    player.<span class="property">current</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="title function_">setStatus</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">isPlay</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;replay&#x27;</span>:</span><br><span class="line">        <span class="title function_">replay</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;playing&#x27;</span>:</span><br><span class="line">        <span class="title function_">pause</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;pause&#x27;</span>:</span><br><span class="line">        <span class="title function_">setStatus</span>(<span class="string">&#x27;playing&#x27;</span>);</span><br><span class="line">        <span class="title function_">play</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleEditSpeed</span> = (<span class="params">value: &#123; label: <span class="built_in">number</span>; value: <span class="built_in">number</span> &#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setSpeed</span>(value);</span><br><span class="line">    <span class="title function_">setEditSpeed</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (status === <span class="string">&#x27;playing&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">pause</span>();</span><br><span class="line">      <span class="title function_">play</span>();</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="string">&#x27;playing&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getIndex</span> = (<span class="params">e: <span class="built_in">any</span>, jumpX?: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> length = jumpX ? jumpX : e.<span class="property">layerX</span> || <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; width &#125; = processRef.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">    <span class="keyword">let</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>((length / width) * count);</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= count) &#123;</span><br><span class="line">      index = count - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">jumpCount</span> = (<span class="params">e: <span class="built_in">any</span>, jumpX?: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;progressBar&#x27;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">pause</span>();</span><br><span class="line">    <span class="keyword">let</span> index = <span class="title function_">getIndex</span>(e, jumpX+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(index&lt;<span class="number">0</span>) &#123;</span><br><span class="line">      index = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= count) &#123;</span><br><span class="line">      index = count - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setStep</span>(index);</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= current || +current - index &gt; preloadSize) &#123;</span><br><span class="line">      <span class="title function_">notice</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">        <span class="attr">mes</span>: <span class="string">&#x27;正在加载中...&#x27;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (status === <span class="string">&#x27;pause&#x27;</span> &amp;&amp; index === count - <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="string">&#x27;replay&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">movePoints</span> = (<span class="params">e: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;progressBar&#x27;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="keyword">const</span> &#123; width &#125; = processRef.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">    <span class="keyword">const</span> dom = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: startX &#125; = e;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">0</span></span><br><span class="line">    dom.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">ev: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: nowX &#125; = ev;</span><br><span class="line">      x = nowX - startX + e.<span class="property">layerX</span>;</span><br><span class="line">      <span class="keyword">if</span> (x&lt;<span class="number">0</span>) &#123;</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; width)&#123;</span><br><span class="line">        x = width;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">setProcessLength</span>(x);</span><br><span class="line">    &#125;;</span><br><span class="line">    dom.<span class="property">onmouseup</span> = <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span><br><span class="line">      <span class="title function_">setJump</span>(<span class="literal">true</span>);</span><br><span class="line">      dom.<span class="property">onmousemove</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: nowX &#125; = ev;</span><br><span class="line">      x = nowX - startX + e.<span class="property">layerX</span>;</span><br><span class="line">      <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; width) &#123;</span><br><span class="line">        x = width;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">setProcessLength</span>(x);</span><br><span class="line">      <span class="keyword">const</span> index = <span class="title function_">jumpCount</span>(e, x);</span><br><span class="line">      <span class="keyword">if</span> (index&amp;&amp;<span class="title class_">Math</span>.<span class="title function_">abs</span>(index - count)&gt;preloadSize)&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">stop</span>();</span><br><span class="line">      &#125;;</span><br><span class="line">      dom.<span class="property">onmouseup</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="title function_">setJump</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">gotoStep</span> = (<span class="params">num: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>( count&lt;= <span class="number">0</span> ) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> _count = step + num;</span><br><span class="line">    <span class="keyword">if</span>(_count &lt; count - <span class="number">1</span> &amp;&amp; status === <span class="string">&#x27;replay&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(_count &gt;= count - <span class="number">1</span> &amp;&amp; status === <span class="string">&#x27;pause&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">setStatus</span>(<span class="string">&#x27;replay&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_count &gt; count - <span class="number">1</span>) &#123;</span><br><span class="line">      _count = count - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_count &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      _count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setStep</span>(_count);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getFrameInfoPosition</span> = (<span class="params">e: <span class="built_in">any</span></span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="keyword">const</span> &#123; frameInfo, frameInfoConfig &#125; = props;</span><br><span class="line">    <span class="keyword">if</span> (!frameInfoConfig || frameInfoConfig.<span class="property">length</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> &#123; width &#125; = processRef.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">    <span class="keyword">const</span> max = width - <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">const</span> min = <span class="number">0</span> - <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: startX &#125; = e;</span><br><span class="line">    <span class="keyword">const</span> dom = e.<span class="property">target</span>;</span><br><span class="line">    <span class="keyword">const</span> lineOffsetLeft = e.<span class="property">target</span>.<span class="property">offsetLeft</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (e.<span class="property">nativeEvent</span>.<span class="property">layerX</span> - lineOffsetLeft &lt; min) &#123;</span><br><span class="line">      <span class="title function_">setFrameInfoPosition</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">nativeEvent</span>.<span class="property">layerX</span> - lineOffsetLeft &gt; max) &#123;</span><br><span class="line">      <span class="title function_">setFrameInfoPosition</span>(max);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setIsShowFrameInfo</span>(<span class="literal">true</span>);</span><br><span class="line">    dom.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">ev: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: nowX &#125; = ev;</span><br><span class="line">      x = nowX - startX + e.<span class="property">nativeEvent</span>.<span class="property">layerX</span> - lineOffsetLeft - <span class="number">50</span>;</span><br><span class="line">      <span class="keyword">if</span> (x &lt; min) &#123;</span><br><span class="line">        x = min;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; max) &#123;</span><br><span class="line">        x = max;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">setFrameInfoPosition</span>(x);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> currentFrameInfo = &#123;&#125;;</span><br><span class="line">      <span class="keyword">const</span> index = <span class="title function_">getIndex</span>(e, x + <span class="number">50</span> + <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> (frameInfo) &#123;</span><br><span class="line">        currentFrameInfo = &#123; ...frameInfo[index], <span class="attr">index</span>: index &#125;;</span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        currentFrameInfo = &#123; <span class="attr">index</span>: index &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">debounceSetCurrentFrameInfo</span>(currentFrameInfo);</span><br><span class="line">    &#125;;</span><br><span class="line">    dom.<span class="property">onmouseleave</span> = <span class="keyword">function</span> (<span class="params">ev: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">      dom.<span class="property">onmousemove</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">pageX</span>: nowX &#125; = ev;</span><br><span class="line">      x = nowX - startX + e.<span class="property">layerX</span> - lineOffsetLeft;</span><br><span class="line">      <span class="keyword">if</span> (x &lt; min) &#123;</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; max) &#123;</span><br><span class="line">        x = max;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">setFrameInfoPosition</span>(x);</span><br><span class="line">      &#125;</span><br><span class="line">      dom.<span class="property">onmouseleave</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="title function_">setIsShowFrameInfo</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">keyboard</span> = (<span class="params">ev: KeyboardEvent</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">switch</span> (ev.<span class="property">key</span> || <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(ev.<span class="property">keyCode</span> || ev.<span class="property">charCode</span>)) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="title function_">gotoStep</span>(-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">        <span class="title function_">gotoStep</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">resize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">debounceGetFrames</span>(frameInfo, processRef.<span class="property">current</span>, line.<span class="property">current</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; width &#125; = processRef.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">      <span class="keyword">if</span> (status === <span class="string">&#x27;playing&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_">play</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (!jump) &#123;</span><br><span class="line">        <span class="title function_">setProcessLength</span>((step / (count - <span class="number">1</span>)) * width);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">onChange</span>(step);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, [step]);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resize);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resize);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, keyboard);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, keyboard);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resize</span>();</span><br><span class="line">    <span class="title function_">setCount</span>(</span><br><span class="line">      (frameInfo &amp;&amp; frameInfo.<span class="property">length</span>) || (totalElements &amp;&amp; +totalElements) || <span class="number">0</span>,</span><br><span class="line">    );</span><br><span class="line">  &#125;, [frameInfo, totalElements]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ProgressWrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Toolbar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TipIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tipProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title:</span> <span class="attr">step</span> &lt;= <span class="string">0</span> ? &#x27;没有了哦！&#x27; <span class="attr">:</span> &#x27;往后 <span class="attr">10</span> 帧&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;fb&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> gotoStep(-10)&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TipIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tipProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title:</span> <span class="attr">step</span> &lt;= <span class="string">0</span> ? &#x27;没有了哦！&#x27; <span class="attr">:</span> &#x27;往后 <span class="attr">1</span> 帧&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;retreat&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> gotoStep(-1)&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Play</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &#x27;<span class="attr">0</span> <span class="attr">8px</span> <span class="attr">0</span> <span class="attr">10px</span>&#x27; &#125;&#125; <span class="attr">onClick</span>=<span class="string">&#123;isPlay&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;getStatus(status)&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Play</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TipIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tipProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title:</span> <span class="attr">step</span> &gt;</span>= count - 1 ? &#x27;没有了哦！&#x27; : &#x27;往前 1 帧&#x27;,</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          type=&quot;forward&quot;</span></span><br><span class="line"><span class="language-xml">          onClick=&#123;() =&gt; gotoStep(1)&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TipIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">tipProps</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">title:</span> <span class="attr">step</span> &gt;</span>= count - 1 ? &#x27;没有了哦！&#x27; : &#x27;往前 10 帧&#x27;,</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          type=&quot;ff&quot;</span></span><br><span class="line"><span class="language-xml">          onClick=&#123;() =&gt; gotoStep(10)&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Speed</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onMouseOver</span>=<span class="string">&#123;()</span> =&gt;</span> setEditSpeed(true)&#125;</span></span><br><span class="line"><span class="language-xml">          onMouseLeave=&#123;() =&gt; setEditSpeed(false)&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;speed.label&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;x&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;editSpeed ? (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">SpeedSelect</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onMouseEnter</span>=<span class="string">&#123;()</span> =&gt;</span> setEditSpeed(true)&#125;</span></span><br><span class="line"><span class="language-xml">              onMouseLeave=&#123;() =&gt; setEditSpeed(false)&#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">              &#123;speedList.map(item =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                return (</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">key</span>=<span class="string">&#123;item.value&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                      handleEditSpeed(item);</span></span><br><span class="line"><span class="language-xml">                    &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                  &gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;item.label&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">CustomIcon</span> <span class="attr">type</span>=<span class="string">&quot;x&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#fff&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                );</span></span><br><span class="line"><span class="language-xml">              &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">SpeedSelect</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ) : (</span></span><br><span class="line"><span class="language-xml">            &#x27;&#x27;</span></span><br><span class="line"><span class="language-xml">          )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Speed</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Toolbar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ProgressBar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;progressBar&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">ref</span>=<span class="string">&#123;processRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onMouseDown</span>=<span class="string">&#123;()</span> =&gt;</span> movePoints(event)&#125;</span></span><br><span class="line"><span class="language-xml">        onMouseEnter=&#123;e =&gt; getFrameInfoPosition(e)&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProgressLine</span> <span class="attr">ref</span>=<span class="string">&#123;line&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ProgressPoint</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">left:</span> `$&#123;+<span class="attr">processLength</span>&#125;<span class="attr">px</span>` &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;isShowFrameInfo ? (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FrameInfo</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">left:</span> `$&#123;+<span class="attr">frameInfoPosition</span>&#125;<span class="attr">px</span>` &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;props?.frameInfoConfig?.map(item =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">              const info: any = currentFrameInfo;</span></span><br><span class="line"><span class="language-xml">              let value = currentFrameInfo &amp;&amp; info[item.key];</span></span><br><span class="line"><span class="language-xml">              if (item.key === &#x27;smallestUnitTimestamp&#x27;) &#123;</span></span><br><span class="line"><span class="language-xml">                value = (</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    &#123;moment(</span></span><br><span class="line"><span class="language-xml">                      currentFrameInfo &amp;&amp; info[item.key] / 1000000,</span></span><br><span class="line"><span class="language-xml">                    ).format(&#x27;HH:mm:ss&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                );</span></span><br><span class="line"><span class="language-xml">              &#125; else if (item.key === &#x27;status&#x27;) &#123;</span></span><br><span class="line"><span class="language-xml">                value = (</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Tag</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">color</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                      <span class="attr">currentFrameInfo</span> &amp;&amp; +<span class="attr">info</span>[<span class="attr">item.key</span>] ? &#x27;<span class="attr">success</span>&#x27; <span class="attr">:</span> &#x27;<span class="attr">error</span>&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  &gt;</span></span></span><br><span class="line"><span class="language-xml">                    &#123;currentFrameInfo &amp;&amp; +info[item.key] === 1</span></span><br><span class="line"><span class="language-xml">                      ? &#x27;有效&#x27;</span></span><br><span class="line"><span class="language-xml">                      : &#x27;无效&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">Tag</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                );</span></span><br><span class="line"><span class="language-xml">              &#125;</span></span><br><span class="line"><span class="language-xml">              return (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Text</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">key</span>=<span class="string">&#123;item.key&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">ellipsis</span>=<span class="string">&#123;&#123;</span> <span class="attr">tooltip:</span> <span class="attr">value</span> &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                    if (item.key !== &#x27;smallestUnitTimestamp&#x27;)&#123;</span></span><br><span class="line"><span class="language-xml">                      return;</span></span><br><span class="line"><span class="language-xml">                    &#125;</span></span><br><span class="line"><span class="language-xml">                    copyHandle(currentFrameInfo &amp;&amp; info[item.key]);</span></span><br><span class="line"><span class="language-xml">                    notice(&#123; type: &#x27;info&#x27;, mes: &#x27;复制当前帧时间&#x27; &#125;);</span></span><br><span class="line"><span class="language-xml">                  &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                &gt;</span></span><br><span class="line"><span class="language-xml">                  &#123;`$&#123;item.label&#125;: `&#125;</span></span><br><span class="line"><span class="language-xml">                  &#123;value&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              );</span></span><br><span class="line"><span class="language-xml">            &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">FrameInfo</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ) : null&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ProgressBar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;(frameInfo &amp;&amp;</span></span><br><span class="line"><span class="language-xml">          frameInfo[frameInfo?.length - 1]?.smallestUnitTimestamp &amp;&amp;</span></span><br><span class="line"><span class="language-xml">          moment(</span></span><br><span class="line"><span class="language-xml">            +frameInfo[frameInfo?.length - 1]?.smallestUnitTimestamp! / 1000000,</span></span><br><span class="line"><span class="language-xml">          ).format(&#x27;HH:mm:ss&#x27;))&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ProgressWrapper</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Progress</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>styled.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ProgressWrapper</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  z-index: 999999;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  height: 20px;</span></span><br><span class="line"><span class="string">  border-radius: 10px;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  background: #ffffffa6;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ProgressPointProps</span> &#123;</span><br><span class="line">  left?: <span class="built_in">number</span> | <span class="built_in">string</span>;</span><br><span class="line">  width?: <span class="built_in">number</span> | <span class="built_in">string</span>;</span><br><span class="line">  background?: <span class="built_in">number</span> | <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ProgressBar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  height: 10px;</span></span><br><span class="line"><span class="string">  opacity: .7;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">FrameInfo</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-around;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: <span class="subst">$&#123;(props: ProgressPointProps) =&gt; props.left || <span class="number">0</span>&#125;</span>;</span></span><br><span class="line"><span class="string">  bottom: 10px;</span></span><br><span class="line"><span class="string">  padding: 10px 4px;</span></span><br><span class="line"><span class="string">  width: 100px;</span></span><br><span class="line"><span class="string">  height: 100px;</span></span><br><span class="line"><span class="string">  font-size: 12px;</span></span><br><span class="line"><span class="string">  border-radius: 10px;</span></span><br><span class="line"><span class="string">  background-color: #fff;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ProgressLine</span> = styled.<span class="property">canvas</span><span class="string">`</span></span><br><span class="line"><span class="string">  pointer-events: none;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  top: -10px;</span></span><br><span class="line"><span class="string">  height: 10px;</span></span><br><span class="line"><span class="string">  background-color: #ccc;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ProgressPoint</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  pointer-events: none;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: <span class="subst">$&#123;(props: ProgressPointProps) =&gt; props.left || <span class="number">0</span>&#125;</span>;</span></span><br><span class="line"><span class="string">  top: -5px;</span></span><br><span class="line"><span class="string">  z-index: 1;</span></span><br><span class="line"><span class="string">  opacity: 0.6;</span></span><br><span class="line"><span class="string">  width: 1px;</span></span><br><span class="line"><span class="string">  height: 20px;</span></span><br><span class="line"><span class="string">  background-color: #7e16cd;</span></span><br><span class="line"><span class="string">  border: 1px solid #7e16cd;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">Toolbar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  margin-right: 10px;</span></span><br><span class="line"><span class="string">  height: 20px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">Speed</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  margin-left: 10px;</span></span><br><span class="line"><span class="string">  width: 40px;</span></span><br><span class="line"><span class="string">  height: 20px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">SpeedSelect</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  z-index: 1;</span></span><br><span class="line"><span class="string">  bottom: 20px;</span></span><br><span class="line"><span class="string">  right: 0px;</span></span><br><span class="line"><span class="string">  text-align: center;</span></span><br><span class="line"><span class="string">  background: #000;</span></span><br><span class="line"><span class="string">  color: #fff;</span></span><br><span class="line"><span class="string">  &amp; &gt; div &#123;</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">    justify-content: center;</span></span><br><span class="line"><span class="string">    padding: 4px 0;</span></span><br><span class="line"><span class="string">    :hover &#123;</span></span><br><span class="line"><span class="string">      background-color: #ffffff5a;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">Play</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-left: -3px;</span></span><br><span class="line"><span class="string">  height: 20px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> react </tag>
            
            <tag> 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Threejs 播放点云的预加载方案</title>
      <link href="/2022/06/29/Threejs-%E6%92%AD%E6%94%BE%E7%82%B9%E4%BA%91%E7%9A%84%E9%A2%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E6%A1%88/"/>
      <url>/2022/06/29/Threejs-%E6%92%AD%E6%94%BE%E7%82%B9%E4%BA%91%E7%9A%84%E9%A2%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/pasted-4.png" alt="upload successful"><br>最近工作上边做数据管理平台，需要播放图片和点云，我们播放的形式和传统的视频流有些区别是点云播放的是一帧一帧的 pcd 文件，图片是一帧一帧的 jpg 文件，而我们的点云文件平均大小是 1.5M 每个，图片文件是平均 230 kb 每个，所以问题就来了，自我们公司平均不足 1M/s 的下载速度下我们的播放就受到了很大的限制，所以我们也不得不做预加载和懒加载的功能</p><h3 id="懒加载的实现"><a href="#懒加载的实现" class="headerlink" title="懒加载的实现"></a>懒加载的实现</h3><p>懒加载的实现就是一个占位图，占位图是用 three 的平面模型和图片纹理渲染一个加载中或者数据为空的图片，然后每次加载 pcd文件还未成功的时候先绘制 loadImage 的 object3D 对象，其代码如下：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">loadImage</span> = <span class="keyword">async</span> (<span class="params">url: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(url, <span class="function">(<span class="params">texture: THREE.Texture</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SpriteMaterial</span>(&#123; <span class="attr">map</span>: texture, <span class="attr">color</span>: <span class="number">0xffffff</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> obj = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Sprite</span>(mat);</span><br><span class="line">    obj.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">    _lazyObj = obj;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="预加载的实现"><a href="#预加载的实现" class="headerlink" title="预加载的实现"></a>预加载的实现</h3><h4 id="预加载"><a href="#预加载" class="headerlink" title="预加载"></a>预加载</h4><p>预加载的实现，中间想了多种方式，一种是利用空闲时间持续往一个变量里边 push，然我们的帧的数据量都是以万记的，所以为了节省内存不得不放弃这种方式，采用分页的形式使用预加载，每次的时候我们会提前加载下一页的数据，然后再到下一页的时候继续加载下一页，然后把之前预加载的赋值给当前变量，但是这个方案在后边 我自己 review 代码的时候发现了另一个问题，即当我播放的速度太快，而变量的赋值比页面重新渲染的速度慢或者还没赋值成功的时候，会出现挑帧用的还是替换之前的数据的情况，如果加 loading 的话就会有明显的卡顿，这样预加载的意义会就不大了，所以后边我就用了采用奇数偶数的形式，偶数为下一页用预加载的数据，基数为第一页这种的除了第一页也是也加载的这样来回切换，然后问题就能得到比较好的解决。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">getFrameList</span>();</span><br><span class="line">&#125;, [resultId, pageNumber, preloadSize, dataType]);</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">getNextFrameList</span>();</span><br><span class="line">&#125;, [resultId, nextPageNumber, preloadSize, dataType]);</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> consult = <span class="title class_">Math</span>.<span class="title function_">floor</span>((step + <span class="number">1</span>) / preloadSize);</span><br><span class="line">  <span class="keyword">const</span> remainder = (step + <span class="number">1</span>) % preloadSize;</span><br><span class="line">  <span class="keyword">let</span> nowPageNumber = consult;</span><br><span class="line">  <span class="keyword">if</span> (remainder &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    nowPageNumber = consult + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(step + <span class="number">1</span>, pageNumber, nextPageNumber, nowPageNumber);</span><br><span class="line">  <span class="keyword">if</span> (nowPageNumber &gt;= totalPages) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nowPageNumber &lt; pageNumber &amp;&amp; nowPageNumber &lt; nextPageNumber) &#123;</span><br><span class="line">    <span class="keyword">if</span> (nowPageNumber % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_">setNextPageNumber</span>(nowPageNumber);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">setPageNumber</span>(nowPageNumber);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nowPageNumber &gt; pageNumber &amp;&amp; nowPageNumber &gt; nextPageNumber) &#123;</span><br><span class="line">    <span class="keyword">if</span> (nowPageNumber % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_">setNextPageNumber</span>(nowPageNumber);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">setPageNumber</span>(nowPageNumber);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nowPageNumber % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">setPageNumber</span>(nowPageNumber + <span class="number">1</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">setNextPageNumber</span>(nowPageNumber + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">setSearchParams</span>(&#123;</span><br><span class="line">    <span class="attr">resultId</span>: resultId,</span><br><span class="line">    <span class="attr">batchStatus</span>: batchStatus + <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">key</span>: key,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;, [step]);</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  _renderer &amp;&amp;</span><br><span class="line">    _frameList?.<span class="property">content</span> &amp;&amp;</span><br><span class="line">    _frameList?.<span class="property">content</span>.<span class="property">length</span> &amp;&amp;</span><br><span class="line">    <span class="title function_">getPointsTask</span>(_frameList?.<span class="property">content</span>, <span class="string">&#x27;current&#x27;</span>);</span><br><span class="line">&#125;, [_frameList]);</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> pageNumber = <span class="title class_">Math</span>.<span class="title function_">floor</span>((step + <span class="number">1</span>) / preloadSize);</span><br><span class="line">  <span class="keyword">if</span> (totalPages &amp;&amp; +pageNumber === +totalPages) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  _renderer &amp;&amp;</span><br><span class="line">    _nextFrameList?.<span class="property">content</span> &amp;&amp;</span><br><span class="line">    _nextFrameList?.<span class="property">content</span>?.<span class="property">length</span> &amp;&amp;</span><br><span class="line">    <span class="title function_">getPointsTask</span>(_nextFrameList?.<span class="property">content</span>, <span class="string">&#x27;next&#x27;</span>);</span><br><span class="line">&#125;, [_nextFrameList]);</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> pageNumber = <span class="title class_">Math</span>.<span class="title function_">floor</span>(step / preloadSize) + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> pointsIndex = step % preloadSize;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> list = pageNumber % <span class="number">2</span> === <span class="number">0</span> ? _nextFrameList : _frameList;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (list?.<span class="property">content</span> &amp;&amp; list?.<span class="property">content</span>[pointsIndex] &amp;&amp; _render) &#123;</span><br><span class="line">    <span class="title function_">getPoints</span>(list?.<span class="property">content</span>[pointsIndex]?.<span class="property">pcdOssAddress</span>!);</span><br><span class="line">    <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, [step, _frameList, _nextFrameList]);</span><br></pre></td></tr></table></figure><h4 id="进度条跳转中断接口的方式"><a href="#进度条跳转中断接口的方式" class="headerlink" title="进度条跳转中断接口的方式"></a>进度条跳转中断接口的方式</h4><p>进度条跳转有可能会持续请求上一次的预加载，中断请求的方式粗暴的使用了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">stop</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 点云 </tag>
            
            <tag> threejs </tag>
            
            <tag> 预加载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写个 CLI Demo 吧</title>
      <link href="/2022/04/27/%E5%86%99%E4%B8%AA-CLI-Demo-%E5%90%A7/"/>
      <url>/2022/04/27/%E5%86%99%E4%B8%AA-CLI-Demo-%E5%90%A7/</url>
      
        <content type="html"><![CDATA[<p>CLI Demo </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于技术上 一些想做的事儿 和 设想</title>
      <link href="/2022/04/25/Untitled/"/>
      <url>/2022/04/25/Untitled/</url>
      
        <content type="html"><![CDATA[<h3 id="组件及页面管理系统"><a href="#组件及页面管理系统" class="headerlink" title="组件及页面管理系统"></a>组件及页面管理系统</h3><p>希望有个组件管理系统，提供以组件为焦点的管理，对于页面维度，可以进行组件的添加、卸载、配置以及重新生成和部署对于组件可进行编辑、生成以及部署</p>]]></content>
      
      
      <categories>
          
          <category> feature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> feature </tag>
            
            <tag> 项目 </tag>
            
            <tag> 设想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行输入git branch，发现进入编辑状态</title>
      <link href="/2022/04/21/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5git-branch%EF%BC%8C%E5%8F%91%E7%8E%B0%E8%BF%9B%E5%85%A5%E7%BC%96%E8%BE%91%E7%8A%B6%E6%80%81/"/>
      <url>/2022/04/21/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5git-branch%EF%BC%8C%E5%8F%91%E7%8E%B0%E8%BF%9B%E5%85%A5%E7%BC%96%E8%BE%91%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在配置iterm2的时候，之后再次用命令行输入git branch的时候</p><p>发现老是进入编辑状态，退出的时候都要按q键，非常的不方便！</p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>在终端输入 这行命令即可：git config –global core.pager ‘’</p>]]></content>
      
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 通过使用alias简化git命令输入</title>
      <link href="/2022/04/21/mac-%E9%80%9A%E8%BF%87%E4%BD%BF%E7%94%A8alias%E7%AE%80%E5%8C%96git%E5%91%BD%E4%BB%A4%E8%BE%93%E5%85%A5/"/>
      <url>/2022/04/21/mac-%E9%80%9A%E8%BF%87%E4%BD%BF%E7%94%A8alias%E7%AE%80%E5%8C%96git%E5%91%BD%E4%BB%A4%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> gs=<span class="string">&#x27;git s&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gst=<span class="string">&#x27;git status&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ga=<span class="string">&#x27;git add -A .&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gc=<span class="string">&#x27;git commit -m&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gd=<span class="string">&#x27;git diff&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gdicdiff=<span class="string">&#x27;git icdiff&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gdopendiff=<span class="string">&#x27;git difftool --tool=opendiff&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gl=<span class="string">&#x27;git log -3&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gls=<span class="string">&#x27;git log -3 --name-status&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gp=<span class="string">&#x27;git pull --rebase&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gb=<span class="string">&#x27;git branch&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gbs=<span class="string">&#x27;git branches&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> cdm=<span class="string">&#x27;cd ~/Documents/mine&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> cdw=<span class="string">&#x27;cd ~/Documents/work&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> cdmrd=<span class="string">&#x27;cd ~/Documents/work/mrd&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> cdd=<span class="string">&#x27;cd ~/Documents/work/directory&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> cdmd=<span class="string">&#x27;cd ~/Documents/mine/directory&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gcl=<span class="string">&#x27;git clone&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> gpush=<span class="string">&#x27;git push&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> nrs=<span class="string">&#x27;npm run serve&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ns=<span class="string">&#x27;npm run start&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> nd=<span class="string">&#x27;npm run dev&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ddnm=<span class="string">&#x27;rm -r package-lock.json &amp; rm -r node_modules&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="使用-item2-问题"><a href="#使用-item2-问题" class="headerlink" title="使用 item2 问题"></a>使用 item2 问题</h3><p>设置别名的时候, 是去修改用户目录下的   .bashrc 或者 .bash_profile 这两个文件都可以, 把 alias 写在这两个文件里面, 别名就会永久生效. </p><p>但是使用 Item2 终端的时候会不生效 </p><p>是因为 使用 item2 并使用 .zsh 来设置主题，且 .zshrc 执行的是 .bash_profile<br>可以将别名  alias 就需要设置 在用户目录下的 .zshrc 中解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><p>或者在 .bash_profile 中加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setting alias</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一些前端常用的工具函数</title>
      <link href="/2022/04/21/%E4%B8%80%E4%BA%9B%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
      <url>/2022/04/21/%E4%B8%80%E4%BA%9B%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>这个用来总结前端一些常用的工具函数 </p><h3 id="获取url里边的参数"><a href="#获取url里边的参数" class="headerlink" title="获取url里边的参数"></a>获取url里边的参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getQueryVariable</span> = (<span class="params">variable: string</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> query = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">const</span> vars = query.<span class="title function_">split</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> vars) &#123;</span><br><span class="line">          <span class="keyword">const</span> pair = item.<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">          <span class="keyword">if</span> (pair[<span class="number">0</span>] === variable) &#123;</span><br><span class="line">              <span class="keyword">return</span> pair[<span class="number">1</span>];</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">　　  <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getQueryVariable</span>(<span class="string">&quot;id&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="类似于loash-js的get函数"><a href="#类似于loash-js的get函数" class="headerlink" title="类似于loash.js的get函数"></a>类似于loash.js的get函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">get</span> = (<span class="params">source: any, path: string, defaultValue: any</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> paths = path.<span class="title function_">replace</span>(<span class="regexp">/\[(\d+)\]/g</span>, <span class="string">&#x27;.$1&#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> result = source;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> p <span class="keyword">of</span> paths) &#123;</span><br><span class="line">        result = <span class="title class_">Object</span>(result)[p];</span><br><span class="line">        <span class="keyword">if</span> (result === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> defaultValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"># 第一个参数是需要查找的对象，第二个参数是需要查找的key，最后一参数是如果没找到返回的默认值</span><br><span class="line"><span class="title function_">get</span>(object,object.<span class="property">name</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="降秒格式化为时分秒"><a href="#降秒格式化为时分秒" class="headerlink" title="降秒格式化为时分秒"></a>降秒格式化为时分秒</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">formatSeconds</span>(<span class="params">val: number | string | <span class="literal">undefined</span></span>): string &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> val === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0秒&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">result</span>: number = <span class="title class_">Number</span>.<span class="built_in">isNaN</span>(val) ? <span class="built_in">parseInt</span>(val + <span class="string">&#x27;&#x27;</span>) : +val!;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> h =</span><br><span class="line">    <span class="title class_">Math</span>.<span class="title function_">floor</span>(result / <span class="number">3600</span>) &lt; <span class="number">10</span></span><br><span class="line">      ? <span class="string">&#x27;0&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>(result / <span class="number">3600</span>)</span><br><span class="line">      : <span class="title class_">Math</span>.<span class="title function_">floor</span>(result / <span class="number">3600</span>);</span><br><span class="line">  <span class="keyword">let</span> m =</span><br><span class="line">    <span class="title class_">Math</span>.<span class="title function_">floor</span>((result / <span class="number">60</span>) % <span class="number">60</span>) &lt; <span class="number">10</span></span><br><span class="line">      ? <span class="string">&#x27;0&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>((result / <span class="number">60</span>) % <span class="number">60</span>)</span><br><span class="line">      : <span class="title class_">Math</span>.<span class="title function_">floor</span>((result / <span class="number">60</span>) % <span class="number">60</span>);</span><br><span class="line">  <span class="keyword">let</span> s =</span><br><span class="line">    <span class="title class_">Math</span>.<span class="title function_">floor</span>(result % <span class="number">60</span>) &lt; <span class="number">10</span></span><br><span class="line">      ? <span class="string">&#x27;0&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>(result % <span class="number">60</span>)</span><br><span class="line">      : <span class="title class_">Math</span>.<span class="title function_">floor</span>(result % <span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> res = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (h !== <span class="string">&#x27;00&#x27;</span>) res += <span class="string">`<span class="subst">$&#123;h&#125;</span>小时`</span>;</span><br><span class="line">  <span class="keyword">if</span> (m !== <span class="string">&#x27;00&#x27;</span>) res += <span class="string">`<span class="subst">$&#123;m&#125;</span>分钟`</span>;</span><br><span class="line">  res += <span class="string">`<span class="subst">$&#123;s&#125;</span>秒`</span>;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过-url-下载文件"><a href="#通过-url-下载文件" class="headerlink" title="通过 url 下载文件"></a>通过 url 下载文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">downloadRes</span>(<span class="params">url: string</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  a.<span class="property">href</span> = url;</span><br><span class="line">  a.<span class="title function_">click</span>();</span><br><span class="line">  a.<span class="title function_">remove</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加内容至剪切板（复制）"><a href="#添加内容至剪切板（复制）" class="headerlink" title="添加内容至剪切板（复制）"></a>添加内容至剪切板（复制）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">copyHandle</span>(<span class="params">content: string</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> clip = &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> <span class="title function_">copy</span> = (<span class="params">e: any</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    e.<span class="property">clipboardData</span>.<span class="title function_">setData</span>(<span class="string">&#x27;text/plain&#x27;</span>, content);</span><br><span class="line">    clip.<span class="property">status</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;copy&#x27;</span>, copy);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;copy&#x27;</span>, copy);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;Copy&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> clip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="待添加"><a href="#待添加" class="headerlink" title="待添加"></a>待添加</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 获取音视频文件的时长</title>
      <link href="/2022/04/21/js-%E8%8E%B7%E5%8F%96%E9%9F%B3%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E7%9A%84%E6%97%B6%E9%95%BF/"/>
      <url>/2022/04/21/js-%E8%8E%B7%E5%8F%96%E9%9F%B3%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E7%9A%84%E6%97%B6%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getTimes</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> obj_file = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;upload&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> content = obj_file.<span class="property">files</span>[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取时长</span></span><br><span class="line">  <span class="keyword">var</span> url = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(content)</span><br><span class="line">  <span class="keyword">var</span> audioElement = <span class="keyword">new</span> <span class="title class_">Audio</span>(url);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> duration;</span><br><span class="line">  audioElement.<span class="title function_">addEventListener</span>(<span class="string">&quot;loadedmetadata&quot;</span>, <span class="keyword">function</span> (<span class="params">_event</span>) &#123;</span><br><span class="line">    duration = audioElement.<span class="property">duration</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(duration/<span class="number">60</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js 上传腾讯云，更新视频时长</title>
      <link href="/2022/04/21/js%E4%B8%8A%E4%BC%A0%E8%85%BE%E8%AE%AF%E4%BA%91%EF%BC%8C%E6%9B%B4%E6%96%B0%E8%A7%86%E9%A2%91%E6%97%B6%E9%95%BF/"/>
      <url>/2022/04/21/js%E4%B8%8A%E4%BC%A0%E8%85%BE%E8%AE%AF%E4%BA%91%EF%BC%8C%E6%9B%B4%E6%96%B0%E8%A7%86%E9%A2%91%E6%97%B6%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onProgress</span>: <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> percent = <span class="built_in">parseInt</span>(data.<span class="property">percent</span> * <span class="number">10000</span>) / <span class="number">100</span>;</span><br><span class="line">  data.<span class="property">percent</span> = percent;</span><br><span class="line">  option.<span class="title function_">onProgress</span>(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐文章 第一期</title>
      <link href="/2022/04/21/%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0-%E7%AC%AC%E4%B8%80%E6%9C%9F/"/>
      <url>/2022/04/21/%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0-%E7%AC%AC%E4%B8%80%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<p>推荐文章</p><p>网络文章</p><h4 id="网页骨架屏自动生成方案（dps）"><a href="#网页骨架屏自动生成方案（dps）" class="headerlink" title="网页骨架屏自动生成方案（dps）"></a>网页骨架屏自动生成方案（dps）</h4><p><a href="https://juejin.im/post/6844903893525069838">网页骨架屏自动生成方案（dps）</a></p><p>推荐理由：本文详细介绍了前端骨架屏生成的几种方案，以及优缺点，然后给出了一个相对合理的解决方案，感兴趣的可以了解下</p><h4 id="SSR-与当年的-JSP、PHP-有什么区别及前端渲染模式"><a href="#SSR-与当年的-JSP、PHP-有什么区别及前端渲染模式" class="headerlink" title="SSR 与当年的 JSP、PHP 有什么区别及前端渲染模式"></a>SSR 与当年的 JSP、PHP 有什么区别及前端渲染模式</h4><p><a href="https://juejin.im/post/6893667742063460365#heading-6">SSR 与当年的 JSP、PHP 有什么区别及前端渲染模式</a></p><p>推荐理由：简要介绍下SSR的前世今生以及前端渲染模式的探索</p><h4 id="如何更好地理解中间件和洋葱模型"><a href="#如何更好地理解中间件和洋葱模型" class="headerlink" title="如何更好地理解中间件和洋葱模型"></a>如何更好地理解中间件和洋葱模型</h4><p><a href="https://mp.weixin.qq.com/s/sqbiK5CyMdq_mrFfA2ER8A">如何更好地理解中间件和洋葱模型</a></p><p>推荐理由：介绍了中间件的概念，详细解释了koa的洋葱圈模型及其compose函数的实现方法</p><h4 id="微前端实践"><a href="#微前端实践" class="headerlink" title="微前端实践"></a>微前端实践</h4><p><a href="https://mp.weixin.qq.com/s/p98EkrxhNtAKb9ex0eY61w">微前端实践</a></p><p>推荐理由：以qiankun框架为例讲解微服务的实践，有助于了解微服务概念</p><h4 id="图片加载失败后CSS样式处理最佳实践"><a href="#图片加载失败后CSS样式处理最佳实践" class="headerlink" title="图片加载失败后CSS样式处理最佳实践"></a>图片加载失败后CSS样式处理最佳实践</h4><p><a href="https://www.zhangxinxu.com/wordpress/2020/10/css-style-image-load-fail/">图片加载失败后CSS样式处理最佳实践</a></p><p>推荐理由：图片加载失败的兜底处理</p><h4 id="温故知新：前端安全知多少"><a href="#温故知新：前端安全知多少" class="headerlink" title="温故知新：前端安全知多少"></a>温故知新：前端安全知多少</h4><p><a href="https://juejin.im/post/6893320971462279175">前端安全知多少</a></p><p>推荐理由：常见的前端安全问题以及对应的解决方案；一丢丢网络攻击的小技巧和小知识；一些经典的漏洞攻击案例；以及最近进入我们视野的新的攻击手段；</p><h4 id="vue中需要注意的问题总结"><a href="#vue中需要注意的问题总结" class="headerlink" title="vue中需要注意的问题总结"></a>vue中需要注意的问题总结</h4><p><a href="https://juejin.im/post/6844903592164327432">vue中需要注意的问题总结</a> </p><p>推荐理由：vue开发中可能会遇到的一些问题，一些需要注意的点。例如keep-alive,生命周期等。</p><h4 id="精读《如何做好-CodeReview》"><a href="#精读《如何做好-CodeReview》" class="headerlink" title="精读《如何做好 CodeReview》"></a>精读《如何做好 CodeReview》</h4><p><a href="https://zhuanlan.zhihu.com/p/111848763">精读《如何做好 CodeReview》</a>  </p><p>推荐理由：CodeReview 的覆盖范围，语气，跨办公区、时区等情况的 code review 该怎么做。</p><h4 id="JavaScript-ES12-新特性抢先体验"><a href="#JavaScript-ES12-新特性抢先体验" class="headerlink" title="JavaScript ES12 新特性抢先体验"></a>JavaScript ES12 新特性抢先体验</h4><p><a href="https://mp.weixin.qq.com/s/T2IkxRp_PXkhk8T_ciLvjw">JavaScript ES12 新特性抢先体验</a></p><p>推荐理由：JavaScript ES12 新特性，对String.prototype.replaceAll 新增replaceAll、Promise.any、WeakRefs、逻辑运算符和赋值表达式、数字分隔符号的讲解</p>]]></content>
      
      
      <categories>
          
          <category> 推荐文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 SparkMD5 获取文件的md5值</title>
      <link href="/2022/04/21/%E5%9F%BA%E4%BA%8E-speackMd5-%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E7%9A%84md5%E5%80%BC/"/>
      <url>/2022/04/21/%E5%9F%BA%E4%BA%8E-speackMd5-%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E7%9A%84md5%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="创建工具函数"><a href="#创建工具函数" class="headerlink" title="创建工具函数"></a>创建工具函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SparkMD5</span> <span class="keyword">from</span> <span class="string">&#x27;spark-md5&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">createFileMd5</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  <span class="comment">// const spark = new SparkMD5();</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> fileReader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">  <span class="comment">// 开始读文件</span></span><br><span class="line">  fileReader.<span class="title function_">readAsBinaryString</span>(file);</span><br><span class="line">  <span class="comment">// 文件读完之后，触发load事件</span></span><br><span class="line">  fileReader.<span class="property">onload</span> = <span class="function">(<span class="params">e: any</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// result是fileReader读到的部分</span></span><br><span class="line">    <span class="keyword">const</span> result = e.<span class="property">target</span>.<span class="property">result</span>;</span><br><span class="line">    <span class="comment">// 如果读到的长度和文件长度一致，则读取成功</span></span><br><span class="line">    <span class="keyword">const</span> isSuccess = file.<span class="property">size</span> === result.<span class="property">length</span>;</span><br><span class="line">    <span class="comment">// 读取成功，则生成MD5，扔出去。失败就报错</span></span><br><span class="line">    isSuccess</span><br><span class="line">    ? <span class="title function_">resolve</span>(<span class="title class_">SparkMD5</span>.<span class="title function_">hashBinary</span>(result))</span><br><span class="line">    : <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;读取出错了&#x27;</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 读取过程中出错也直接报错</span></span><br><span class="line">    fileReader.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;读取出错了&#x27;</span>));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createFileMd5 &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/get-files-md5&#x27;</span>;</span><br><span class="line"><span class="title function_">createFileMd5</span>(file.<span class="property">raw</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">md5</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(md5)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> MD5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elementUi table表格添加拖拽功能</title>
      <link href="/2022/04/21/elementUi-table%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/04/21/elementUi-table%E8%A1%A8%E6%A0%BC%E7%9A%84%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>基于 element ui 的 Table 组件 和 Sortable 为表格添加拖拽功能</p><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Sortable</span> <span class="keyword">from</span> <span class="string">&#x27;sortablejs&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="添加声明"><a href="#添加声明" class="headerlink" title="添加声明"></a>添加声明</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sortable</span>: any = <span class="literal">null</span>; </span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">const</span> targetDom = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">table</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sortable</span> = <span class="keyword">new</span> <span class="title class_">Sortable</span>(targetDom, &#123;</span><br><span class="line"><span class="attr">onEnd</span>: <span class="variable language_">this</span>.<span class="property">onEnd</span></span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="title class_">Emit</span>(<span class="string">&#x27;drap&#x27;</span>)</span><br><span class="line"><span class="title function_">onEnd</span>(<span class="params">&#123; oldIndex, newIndex &#125;</span>) &#123;</span><br><span class="line">　　<span class="keyword">return</span> &#123;</span><br><span class="line">　　　　<span class="attr">oldIndex</span>: oldIndex,</span><br><span class="line">　　　　<span class="attr">newIndex</span>: newIndex</span><br><span class="line">　　&#125;;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">逻辑处理代码：</span><br><span class="line"><span class="title function_">handleDrap</span>(<span class="params">index, key</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> currRow = <span class="variable language_">this</span>.<span class="property">data</span>[key].<span class="title function_">splice</span>(index.<span class="property">oldIndex</span>, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">data</span>[key].<span class="title function_">splice</span>(index.<span class="property">newIndex</span>, <span class="number">0</span>, currRow);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> vue </tag>
            
            <tag> 拖拽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elementUI上传图片前判断图片的尺寸大小</title>
      <link href="/2022/04/21/elementUI%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%89%8D%E5%88%A4%E6%96%AD%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%BA%E5%AF%B8%E5%A4%A7%E5%B0%8F/"/>
      <url>/2022/04/21/elementUI%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%89%8D%E5%88%A4%E6%96%AD%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%BA%E5%AF%B8%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">beforeAvatarUpload</span>(<span class="params">file</span>) &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">const</span> isSize = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">let</span> height = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">let</span> _URL = <span class="variable language_">window</span>.<span class="property">URL</span> || <span class="variable language_">window</span>.<span class="property">webkitURL</span>;         </span><br><span class="line">        <span class="keyword">let</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">        img.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> valid = img.<span class="property">width</span> &gt;= width &amp;&amp; img.<span class="property">height</span> &gt;= height;</span><br><span class="line">            valid ? <span class="title function_">resolve</span>() : <span class="title function_">reject</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        img.<span class="property">src</span> = _URL.<span class="title function_">createObjectURL</span>(file);</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;上传的icon必须是等于或大于100*100!&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span>  isSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防抖和节流</title>
      <link href="/2022/04/21/%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/"/>
      <url>/2022/04/21/%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h3 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">f</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">wait</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">f, wait</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(timer) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">    &#125;</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">f</span>(...args);</span><br><span class="line">    &#125;, wait);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h3><h4 id="非首次执行"><a href="#非首次执行" class="headerlink" title="非首次执行"></a>非首次执行</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流 非首次执行</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">f</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">wait</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">f, wait</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(timer) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">f</span>(...args);</span><br><span class="line">      timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;, wait);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="节流-1"><a href="#节流-1" class="headerlink" title="节流"></a>节流</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流 首次执行</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">f</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">wait</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">f, wait</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> last = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">if</span>(now - last &gt;= wait) &#123;</span><br><span class="line">      <span class="title function_">f</span>(...args);</span><br><span class="line">      last = now;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="节流-两者结合"><a href="#节流-两者结合" class="headerlink" title="节流 两者结合"></a>节流 两者结合</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流 两者结合</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">f</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">wait</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">f, wait</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> last = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">const</span> remaining = wait - (now - last);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(remaining &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_">f</span>(...args);</span><br><span class="line">      last = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(timer) <span class="keyword">return</span>;</span><br><span class="line">      timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">f</span>(...args);</span><br><span class="line">        last = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">      &#125;, remaining);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sayHellow</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hellow&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// const debounceSayHellow = debounce(sayHellow, 2000);</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"><span class="comment">// debounceSayHellow();</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> throttleSayHellow = <span class="title function_">throttle</span>(sayHellow, <span class="number">2000</span>);</span><br><span class="line"> </span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">throttleSayHellow</span>();</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 防抖 节流 </tag>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git设置用户名和邮箱</title>
      <link href="/2022/04/14/git/"/>
      <url>/2022/04/14/git/</url>
      
        <content type="html"><![CDATA[<h3 id="git设置用户名和邮箱"><a href="#git设置用户名和邮箱" class="headerlink" title="git设置用户名和邮箱"></a>git设置用户名和邮箱</h3><p>1.设置用户名和密码</p><p>git config –global user.name “username”</p><p>git config –global user.email <a href="mailto:&#117;&#x73;&#101;&#x72;&#101;&#x6d;&#97;&#105;&#x6c;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;">&#117;&#x73;&#101;&#x72;&#101;&#x6d;&#97;&#105;&#x6c;&#x40;&#x71;&#x71;&#x2e;&#x63;&#111;&#109;</a> –注意邮箱没有双引号</p><p>2.查看用户名和密码</p><p>git config user.name</p><p>git config user.email</p><p>3.创建一个新的存储库</p><p>git clone <a href="https://giturl/user.name/projectname.git">https://giturl/user.name/projectname.git</a><br>cd testproject<br>touch README.md<br>git add README.md<br>git commit -m “add README”<br>git push -u origin master</p><p>第一次创建存储库,输入上面第一个命令有可能会出现remote: HTTP Basic: Access denied报错,<br>主要原因是首次输入的用户名或密码不正确，导致上传时验证失败，所以要重新设置，如下<br>git config –system –unset credential.helper</p><h3 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h3><p>1、打开git bash</p><p>2、执行生成公钥和私钥的命令：ssh-keygen -t rsa 并按回车3下（为什么按三下，是因为有提示你是否需要设置密码，如果设置了每次使用Git都会用到密码，一般都是直接不写为空，直接回车就好了）。会在一个文件夹里面生成一个私钥 id_rsa和一个公钥id_rsa.pub。（可执行start ~ 命令，生成的公私钥在 .ssh的文件夹里面）</p><p>3、执行查看公钥的命令：cat ~/.ssh/id_rsa.pub</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分片上传</title>
      <link href="/2022/03/29/%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/03/29/%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SparkMD5</span> <span class="keyword">from</span> <span class="string">&#x27;spark-md5&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> $http <span class="keyword">from</span> <span class="string">&#x27;../api/api&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//错误信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getError</span>(<span class="params">action, option, xhr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> msg;</span><br><span class="line">  <span class="keyword">if</span> (xhr.<span class="property">response</span>) &#123;</span><br><span class="line">    msg = <span class="string">`<span class="subst">$&#123;xhr.response.error || xhr.response&#125;</span>`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (xhr.<span class="property">responseText</span>) &#123;</span><br><span class="line">    msg = <span class="string">`<span class="subst">$&#123;xhr.responseText&#125;</span>`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    msg = <span class="string">`fail to post <span class="subst">$&#123;action&#125;</span> <span class="subst">$&#123;xhr.status&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> err = <span class="keyword">new</span> <span class="title class_">Error</span>(msg);</span><br><span class="line">  err.<span class="property">status</span> = xhr.<span class="property">status</span>;</span><br><span class="line">  err.<span class="property">method</span> = <span class="string">&#x27;post&#x27;</span>;</span><br><span class="line">  err.<span class="property">url</span> = action;</span><br><span class="line">  <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 上传成功完成合并之后，获取服务器返回的json</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBody</span>(<span class="params">xhr</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> text = xhr.<span class="property">responseText</span> || xhr.<span class="property">response</span>;</span><br><span class="line">  <span class="keyword">if</span> (!text) &#123;</span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(text);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分片上传的自定义请求，以下请求会覆盖element的默认上传行为</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">upload</span>(<span class="params">option</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">XMLHttpRequest</span> === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> spark = <span class="keyword">new</span> <span class="title class_">SparkMD5</span>.<span class="title class_">ArrayBuffer</span>(); <span class="comment">// md5的ArrayBuffer加密类</span></span><br><span class="line">  <span class="keyword">const</span> fileReader = <span class="keyword">new</span> <span class="title class_">FileReader</span>(); <span class="comment">// 文件读取类</span></span><br><span class="line">  <span class="keyword">const</span> action = option.<span class="property">action</span>; <span class="comment">// 文件上传上传路径</span></span><br><span class="line">  <span class="keyword">const</span> chunkSize = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>; <span class="comment">// 单个分片大小，这里测试用1m</span></span><br><span class="line">  <span class="keyword">let</span> md5 = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 文件的唯一标识</span></span><br><span class="line">  <span class="keyword">const</span> optionFile = option.<span class="property">file</span>; <span class="comment">// 需要分片的文件</span></span><br><span class="line">  <span class="keyword">let</span> fileChunkedList = []; <span class="comment">// 文件分片完成之后的数组</span></span><br><span class="line">  <span class="keyword">const</span> percentage = []; <span class="comment">// 文件上传进度的数组，单项就是一个分片的进度</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 文件开始分片，push到fileChunkedList数组中， 并用第一个分片去计算文件的md5</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; optionFile.<span class="property">size</span>; i = i + chunkSize) &#123;</span><br><span class="line">    <span class="keyword">const</span> tmp = optionFile.<span class="title function_">slice</span>(i, <span class="title class_">Math</span>.<span class="title function_">min</span>(i + chunkSize, optionFile.<span class="property">size</span>));</span><br><span class="line">    <span class="keyword">if</span> (i === <span class="number">0</span>) &#123;</span><br><span class="line">      fileReader.<span class="title function_">readAsArrayBuffer</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    fileChunkedList.<span class="title function_">push</span>(tmp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在文件读取完毕之后，开始计算文件md5，作为文件唯一标识</span></span><br><span class="line">  fileReader.<span class="property">onload</span> = <span class="keyword">async</span> (e) =&gt; &#123;</span><br><span class="line">    spark.<span class="title function_">append</span>(e.<span class="property">target</span>.<span class="property">result</span>);</span><br><span class="line">    md5 = spark.<span class="title function_">end</span>() + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="comment">// console.log(&#x27;文件唯一标识--------&#x27;, md5);</span></span><br><span class="line">    <span class="comment">// 将fileChunkedList转成FormData对象，并加入上传时需要的数据</span></span><br><span class="line">    fileChunkedList = fileChunkedList.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">      <span class="keyword">if</span> (option.<span class="property">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 额外加入外面传入的data数据</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(option.<span class="property">data</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">          formData.<span class="title function_">append</span>(key, option.<span class="property">data</span>[key]);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 这些字段看后端需要哪些，就传哪些，也可以自己追加额外参数</span></span><br><span class="line">      formData.<span class="title function_">append</span>(option.<span class="property">filename</span>, item, option.<span class="property">file</span>.<span class="property">name</span>); <span class="comment">// 文件</span></span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&#x27;fileType&#x27;</span>, option.<span class="property">file</span>.<span class="property">type</span>.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>)[<span class="number">1</span>]); <span class="comment">// 文件</span></span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&#x27;chunkNumber&#x27;</span>, index + <span class="number">1</span>); <span class="comment">// 当前文件块</span></span><br><span class="line">      <span class="comment">// formData.append(&#x27;chunkSize&#x27;, chunkSize); // 单个分块大小</span></span><br><span class="line">      <span class="comment">// formData.append(&#x27;currentChunkSize&#x27;, item.size); // 当前分块大小</span></span><br><span class="line">      <span class="comment">// formData.append(&#x27;totalSize&#x27;, optionFile.size); // 文件总大小</span></span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&#x27;identifier&#x27;</span>, md5); <span class="comment">// 文件标识</span></span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&#x27;filename&#x27;</span>, option.<span class="property">file</span>.<span class="property">name</span>); <span class="comment">// 文件名</span></span><br><span class="line">      formData.<span class="title function_">append</span>(<span class="string">&#x27;totalChunks&#x27;</span>, fileChunkedList.<span class="property">length</span>); <span class="comment">// 总块数</span></span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">formData</span>: formData, <span class="attr">index</span>: index &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新上传进度条百分比的方法</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">updataPercentage</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">let</span> loaded = <span class="number">0</span>; <span class="comment">// 当前已经上传文件的总大小</span></span><br><span class="line">      percentage.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        loaded += item;</span><br><span class="line">      &#125;);</span><br><span class="line">      e.<span class="property">percent</span> = (loaded / optionFile.<span class="property">size</span>) * <span class="number">100</span>;</span><br><span class="line">      option.<span class="title function_">onProgress</span>(e);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 创建队列上传任务，limit是上传并发数，默认会用两个并发</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">sendRequest</span>(<span class="params">chunks, limit = <span class="number">2</span></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> len = chunks.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> isStop = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">start</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (isStop) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">const</span> item = chunks.<span class="title function_">shift</span>();</span><br><span class="line">          <span class="comment">// console.log();</span></span><br><span class="line">          <span class="keyword">if</span> (item) &#123;</span><br><span class="line">            <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">            <span class="keyword">const</span> index = item.<span class="property">index</span>;</span><br><span class="line">            <span class="comment">// 分片上传失败回调</span></span><br><span class="line">            xhr.<span class="property">onerror</span> = <span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">e</span>) &#123;</span><br><span class="line">              isStop = <span class="literal">true</span>;</span><br><span class="line">              <span class="title function_">reject</span>(e);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 分片上传成功回调</span></span><br><span class="line">            xhr.<span class="property">onload</span> = <span class="keyword">function</span> <span class="title function_">onload</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (xhr.<span class="property">status</span> &lt; <span class="number">200</span> || xhr.<span class="property">status</span> &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">                isStop = <span class="literal">true</span>;</span><br><span class="line">                <span class="title function_">reject</span>(<span class="title function_">getError</span>(action, option, xhr));</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (counter === len - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 最后一个上传完成</span></span><br><span class="line">                <span class="title function_">resolve</span>(len);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                counter++;</span><br><span class="line">                <span class="title function_">start</span>();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 分片上传中回调</span></span><br><span class="line">            <span class="keyword">if</span> (xhr.<span class="property">upload</span>) &#123;</span><br><span class="line">              xhr.<span class="property">upload</span>.<span class="property">onprogress</span> = <span class="keyword">function</span> <span class="title function_">progress</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (e.<span class="property">total</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  e.<span class="property">percent</span> = (e.<span class="property">loaded</span> / e.<span class="property">total</span>) * <span class="number">100</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                percentage[index] = e.<span class="property">loaded</span>;</span><br><span class="line">                <span class="comment">// console.log(index);</span></span><br><span class="line">                <span class="title function_">updataPercentage</span>(e);</span><br><span class="line">              &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            xhr.<span class="title function_">open</span>(<span class="string">&#x27;post&#x27;</span>, action, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (option.<span class="property">withCredentials</span> &amp;&amp; <span class="string">&#x27;withCredentials&#x27;</span> <span class="keyword">in</span> xhr) &#123;</span><br><span class="line">              xhr.<span class="property">withCredentials</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">const</span> headers = option.<span class="property">headers</span> || &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">in</span> headers) &#123;</span><br><span class="line">              <span class="keyword">if</span> (headers.<span class="title function_">hasOwnProperty</span>(item) &amp;&amp; headers[item] !== <span class="literal">null</span>) &#123;</span><br><span class="line">                xhr.<span class="title function_">setRequestHeader</span>(item, headers[item]);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 文件开始上传</span></span><br><span class="line">            xhr.<span class="title function_">send</span>(item.<span class="property">formData</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">while</span> (limit &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">start</span>();</span><br><span class="line">          &#125;, <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span>);</span><br><span class="line">          limit -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 调用上传队列方法，提醒后端已上传完成，合并分片的文件</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">sendRequest</span>(fileChunkedList, <span class="number">2</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">len</span>) =&gt;</span> &#123;</span><br><span class="line">        $http</span><br><span class="line">          .<span class="title function_">upload</span>(&#123;</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">              <span class="attr">identifier</span>: md5,</span><br><span class="line">              <span class="attr">filename</span>: option.<span class="property">file</span>.<span class="property">name</span>,</span><br><span class="line">              <span class="attr">totalSize</span>: optionFile.<span class="property">size</span>,</span><br><span class="line">              <span class="attr">totalChunks</span>: len</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">              <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;multipart/form-data&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (+res.<span class="property">errNo</span> === <span class="number">0</span>) &#123;</span><br><span class="line">              option.<span class="title function_">onSuccess</span>(res);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              option.<span class="title function_">onError</span>(res);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 这里的参数根据自己实际情况写</span></span><br><span class="line">      <span class="comment">/* const data = &#123;</span></span><br><span class="line"><span class="comment">        identifier: md5,</span></span><br><span class="line"><span class="comment">        filename: option.file.name,</span></span><br><span class="line"><span class="comment">        totalSize: optionFile.size,</span></span><br><span class="line"><span class="comment">        totalChunks: fileChunkedList.length</span></span><br><span class="line"><span class="comment">      &#125;; */</span></span><br><span class="line">      <span class="comment">// 给后端发送文件合并请求</span></span><br><span class="line">      <span class="comment">/* const fileInfo = await this.axios(</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          method: &#x27;post&#x27;,</span></span><br><span class="line"><span class="comment">          url: &#x27;/handwrite/outline/outlineupload&#x27;,</span></span><br><span class="line"><span class="comment">          data: this.qs.stringify(data)</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          headers: &#123;</span></span><br><span class="line"><span class="comment">            &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">      ).catch((error) =&gt; &#123;</span></span><br><span class="line"><span class="comment">        console.log(&#x27;ERRRR:: &#x27;, error.response.data);</span></span><br><span class="line"><span class="comment">      &#125;);</span></span><br><span class="line"><span class="comment">      if (fileInfo.data.code === 200) &#123;</span></span><br><span class="line"><span class="comment">        const success = getBody(fileInfo.request);</span></span><br><span class="line"><span class="comment">        option.onSuccess(success);</span></span><br><span class="line"><span class="comment">        return;</span></span><br><span class="line"><span class="comment">      &#125; */</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      option.<span class="title function_">onError</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-hooks笔记</title>
      <link href="/2022/03/29/react-hooks%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/29/react-hooks%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>react 官网中有关hooks使用的一些建议记录下来 提醒自己平时注意下</p><h4 id="useState"><a href="#useState" class="headerlink" title="useState"></a>useState</h4><p>useState() 我们推荐把 state 切分成多个 state 变量，每个变量包含的不同值会在同时发生变化。</p><p>我们可以把组件的 state 拆分为 A 和 B 两个对象，并永远以非合并的方式去替换 A或者B</p><p>不需要render的场景下尾了避免组件重新渲染，可以使用useRef代替useState</p><h4 id="useRef"><a href="#useRef" class="headerlink" title="useRef"></a>useRef</h4><p>useRef() 和自建一个 {current: …} 对象的唯一区别是，useRef 会在每次渲染时返回同一个 ref 对象。</p><p>当 ref 对象内容发生变化时，useRef 并不会通知你。变更 .current 属性不会引发组件重新渲染。如果想要在 React 绑定或解绑 DOM 节点的 ref 时运行某些代码，则需要使用回调 ref 来实现。</p><h4 id="effect"><a href="#effect" class="headerlink" title="effect"></a>effect</h4><p>effect 是在绘制之后，延迟渲染的</p><h4 id="useEffect、useMemo、useCallback-或-useImperativeHandle"><a href="#useEffect、useMemo、useCallback-或-useImperativeHandle" class="headerlink" title="useEffect、useMemo、useCallback 或 useImperativeHandle"></a>useEffect、useMemo、useCallback 或 useImperativeHandle</h4><p>如果你指定了一个 依赖列表 作为 useEffect、useMemo、useCallback 或 useImperativeHandle 的最后一个参数，它必须包含回调中的所有值，并参与 React 数据流。这就包括 props、state，以及任何由它们衍生而来的东西。</p><p>只有 当函数（以及它所调用的函数）不引用 props、state 以及由它们衍生而来的值时，你才能放心地把它们从依赖列表中省略</p><h4 id="react-router"><a href="#react-router" class="headerlink" title="react-router"></a>react-router</h4><p>一般要使用link来代替代码中利用 react-router 做的router.push或者router.replace 这种跳转，其实这样写也没什么问题，就是不符合 Accessibility （易访问性设计）的要求<br>1<br>2<br>3<br><Link to="/welcome"><br>  <span>Go to welcome</span><br></Link>　　</p><h4 id="callback"><a href="#callback" class="headerlink" title="callback"></a>callback</h4><p>通常为了测量dom节点的位置或者是大小的基本方式是使用callback ref。每当ref被附加到另一个节点，react就会调用callback。</p><h4 id="待完善"><a href="#待完善" class="headerlink" title="待完善"></a>待完善</h4>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> react </tag>
            
            <tag> react hooks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面字段高亮怎么做</title>
      <link href="/2022/03/29/%E9%A1%B5%E9%9D%A2%E5%AD%97%E6%AE%B5%E9%AB%98%E4%BA%AE%E6%80%8E%E4%B9%88%E5%81%9A/"/>
      <url>/2022/03/29/%E9%A1%B5%E9%9D%A2%E5%AD%97%E6%AE%B5%E9%AB%98%E4%BA%AE%E6%80%8E%E4%B9%88%E5%81%9A/</url>
      
        <content type="html"><![CDATA[<p>可能有些需求会有一些做字段高亮的需求，简单粗暴一点的方法就是 </p><p><img src="/images/pasted-3.png" alt="upload successful"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> seachText = <span class="string">&#x27;枚举&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> regexp = <span class="keyword">new</span> <span class="title class_">RegExp</span>(seachText, <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> content = $(<span class="string">&#x27;#content&#x27;</span>).<span class="title function_">html</span>();</span><br><span class="line"><span class="keyword">let</span> newHtml = content.<span class="title function_">replace</span>(regexp, <span class="string">&#x27;&lt;span class=&quot;highlight-word&quot; style=&quot;background: #ff0; color: #f00;&quot;&gt;&#x27;</span> + seachText + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;#content&#x27;</span>).<span class="title function_">html</span>(newHtml);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个 react 写的 文字Logo气泡特效</title>
      <link href="/2022/03/29/%E4%B8%80%E4%B8%AA-react-%E5%86%99%E7%9A%84-%E6%96%87%E5%AD%97Logo%E6%B0%94%E6%B3%A1%E7%89%B9%E6%95%88/"/>
      <url>/2022/03/29/%E4%B8%80%E4%B8%AA-react-%E5%86%99%E7%9A%84-%E6%96%87%E5%AD%97Logo%E6%B0%94%E6%B3%A1%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/pasted-2.png" alt="upload successful"><br>这个特效主要是使用 css3 实现，效果就是如图气泡漂浮的效果</p><h3 id="css-代码"><a href="#css-代码" class="headerlink" title="css 代码"></a>css 代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import styled <span class="selector-tag">from</span> &#x27;styled-components&#x27;;</span><br><span class="line"></span><br><span class="line">export const TextWrap = styled<span class="selector-class">.div</span>`</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">`;</span><br><span class="line"></span><br><span class="line">export const Bubble = styled<span class="selector-class">.div</span>`</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="selector-class">.particle</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">33</span>, <span class="number">150</span>, <span class="number">243</span>, <span class="number">0.5</span>);</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: bubbles <span class="number">3s</span> ease-in infinite;</span><br><span class="line">    <span class="attribute">animation</span>: bubbles <span class="number">3s</span> ease-in infinite;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@-webkit-keyframes</span> bubbles &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">20%</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">20%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">1000%</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">1000%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@keyframes</span> bubbles &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">20%</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">20%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">      -webkit-<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">1000%</span>);</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, -<span class="number">1000%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">`;</span><br><span class="line"></span><br><span class="line">export const Text = styled<span class="selector-class">.div</span>`</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">line-height</span>: normal;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">`;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="tsx代码"><a href="#tsx代码" class="headerlink" title="tsx代码"></a>tsx代码</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">FC</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">TextWrap</span>, <span class="title class_">Bubble</span>, <span class="title class_">Text</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./styled&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  path?: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">  subTitle?: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">Logo</span>: <span class="variable constant_">FC</span>&lt;<span class="title class_">Props</span>&gt;= <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; path, title, subTitle &#125; = props;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>();</span><br><span class="line">  <span class="keyword">const</span> rnd = <span class="keyword">function</span> (<span class="params">m: <span class="built_in">string</span>, n: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> m1 = <span class="built_in">parseInt</span>(m);</span><br><span class="line">    <span class="keyword">const</span> n1 = <span class="built_in">parseInt</span>(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (n1 - m1 + <span class="number">1</span>)) + m1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">CreateBubbles</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> bubbleCount = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">let</span> dom = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= bubbleCount; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> size = <span class="title function_">rnd</span>(<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;12&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> top = <span class="title function_">rnd</span>(<span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;80&#x27;</span>) + <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">      <span class="keyword">const</span> left = <span class="title function_">rnd</span>(<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;95&#x27;</span>) + <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">      <span class="keyword">const</span> width = size + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      <span class="keyword">const</span> height = size + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      <span class="keyword">const</span> animation = <span class="title function_">rnd</span>(<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;30&#x27;</span>) / <span class="number">10</span> + <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">      <span class="keyword">const</span> style = &#123;</span><br><span class="line">        <span class="attr">top</span>: top,</span><br><span class="line">        <span class="attr">left</span>: left,</span><br><span class="line">        <span class="attr">width</span>: width,</span><br><span class="line">        <span class="attr">height</span>: height,</span><br><span class="line">        <span class="attr">animationDelay</span>: animation,</span><br><span class="line">      &#125;;</span><br><span class="line">      dom.<span class="title function_">push</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;particle&quot;</span> <span class="attr">style</span>=<span class="string">&#123;style&#125;</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;...dom&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> go = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    path ? <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = path : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TextWrap</span> <span class="attr">onClick</span>=<span class="string">&#123;go&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">CreateBubbles</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;subTitle&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">TextWrap</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Logo path=&#x27;/bagset&#x27; title=&#x27;TRUNK&#x27; subTitle=&#x27; 主线科技&#x27;/&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> react </tag>
            
            <tag> 组件 </tag>
            
            <tag> react 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown支持的代码块语法高亮</title>
      <link href="/2022/03/29/Markdown%E6%94%AF%E6%8C%81%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%97%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE/"/>
      <url>/2022/03/29/Markdown%E6%94%AF%E6%8C%81%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%97%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Markdown支持高亮显示的语言"><a href="#Markdown支持高亮显示的语言" class="headerlink" title="Markdown支持高亮显示的语言"></a>Markdown支持高亮显示的语言</h3><p>支持的语言：1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``` python</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实现一个自动注册的 Icon 组件</title>
      <link href="/2022/03/29/%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C%E7%9A%84-Icon-%E7%BB%84%E4%BB%B6/"/>
      <url>/2022/03/29/%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%86%8C%E7%9A%84-Icon-%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>react 项目中我们难免会用到 自定义的 Icon，而我们使用 Icon 一般都是渲染 Svg 其中&gt;的好处就是 svg 可编辑，可搜索、索引、脚本化、可压缩，可以在图片质量不下降的情况&gt;下被放大，可以在任何分辨率下被高质量打印；</p><p>所以我们一般会在项目中封装一个自动注册 SVG 图标的 Icon 组件，因为我的项目是利用 vite 搭建的所以会引入<font color="red">vite-plugin-svgr</font>的插件;</p><h3 id="组件封装"><a href="#组件封装" class="headerlink" title="组件封装"></a>组件封装</h3><h4 id="引入-vite-plugin-svgr"><a href="#引入-vite-plugin-svgr" class="headerlink" title="引入 vite-plugin-svgr"></a>引入 vite-plugin-svgr</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vite-plugin-svgr -D</span><br></pre></td></tr></table></figure><h4 id="使用-vite-plugin-svgr"><a href="#使用-vite-plugin-svgr" class="headerlink" title="使用 vite-plugin-svgr"></a>使用 vite-plugin-svgr</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> svgr <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-svgr&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在plugins中</span></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line"><span class="title function_">reactRefresh</span>(),</span><br><span class="line">    <span class="title function_">svgr</span>(),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="设置存放图标-svg-静态文件的目录"><a href="#设置存放图标-svg-静态文件的目录" class="headerlink" title="设置存放图标 svg 静态文件的目录"></a>设置存放图标 svg 静态文件的目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 assets 目录下设置 Icons 文件夹，将所有的 svg 存放在此处，svg文件的名称即我们使用组件时需要传入的 type 字段，用来指定是哪个Icon</span><br></pre></td></tr></table></figure><h4 id="编写自动注册的-Icon-组件"><a href="#编写自动注册的-Icon-组件" class="headerlink" title="编写自动注册的 Icon 组件"></a>编写自动注册的 Icon 组件</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">FC</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">IconTypes</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> modules = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&#x27;/src/assets/Icons/**/*.svg&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="attr">icons</span>: <span class="built_in">any</span> = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">iconNames</span>: <span class="built_in">string</span>[] = <span class="title class_">Object</span>.<span class="title function_">keys</span>(modules);</span><br><span class="line">iconNames.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">type</span>: <span class="title class_">IconTypes</span> = key <span class="keyword">as</span> <span class="title class_">IconTypes</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">icon</span>: unknown = modules[<span class="keyword">type</span>].<span class="property">ReactComponent</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">name</span>: <span class="title class_">IconTypes</span> = key.<span class="title function_">match</span>(<span class="regexp">/\/Icons\/(\S*).svg/</span>)![<span class="number">1</span>] <span class="keyword">as</span> <span class="title class_">IconTypes</span>;</span><br><span class="line">  icons[name] = icon;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">CustomIconProps</span> &#123;</span><br><span class="line">  <span class="keyword">type</span>?: <span class="title class_">IconTypes</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CustomIcon</span>: <span class="variable constant_">FC</span>&lt;<span class="title class_">CustomIconProps</span>&gt; = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="keyword">type</span> &#125; = props;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">type</span>) <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;anticon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Icon</span> = icons[<span class="keyword">type</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;anticon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CustomIcon</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">CustomIcon</span> <span class="keyword">type</span>=&#123;<span class="string">&#x27;svg 文件不带有后缀的文件名&#x27;</span>&#125; /&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> react </tag>
            
            <tag> 组件 </tag>
            
            <tag> react 组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置环境变量后接口地址总是会有部分路由</title>
      <link href="/2022/03/07/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%90%8E%E6%8E%A5%E5%8F%A3%E5%9C%B0%E5%9D%80%E6%80%BB%E6%98%AF%E4%BC%9A%E6%9C%89%E9%83%A8%E5%88%86%E8%B7%AF%E7%94%B1/"/>
      <url>/2022/03/07/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%90%8E%E6%8E%A5%E5%8F%A3%E5%9C%B0%E5%9D%80%E6%80%BB%E6%98%AF%E4%BC%9A%E6%9C%89%E9%83%A8%E5%88%86%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<p>原因：主要是因为 .env.development 这个文件 中 <code>VITE_BASE_URL=&#39;/mock/12&#39;</code> mock 前边没有加<font color="#f00"> / </font>， 造成了每个请求都加上了路由的一个地址</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>美化终端：zsh 和 on-my-zsh 配置</title>
      <link href="/2022/02/23/%E7%BE%8E%E5%8C%96%E7%BB%88%E7%AB%AF%EF%BC%9Azsh-%E5%92%8C-on-my-zsh-%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/02/23/%E7%BE%8E%E5%8C%96%E7%BB%88%E7%AB%AF%EF%BC%9Azsh-%E5%92%8C-on-my-zsh-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><p>当前环境 shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $SHELL</span><br></pre></td></tr></table></figure><p>查看系统自带哪些 shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells</span><br></pre></td></tr></table></figure><p>安装 zsh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install zsh   # CentOS</span><br><span class="line">brew install zsh  # mac安装</span><br></pre></td></tr></table></figure><p>将zsh设置为默认shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># CentOS</span><br><span class="line">chsh -s /bin/zsh </span><br><span class="line"></span><br><span class="line"># Mac如下</span><br><span class="line"># 在 /etc/shells 文件中加入如下一行</span><br><span class="line">/usr/local/bin/zsh</span><br><span class="line"></span><br><span class="line"># 接着运行</span><br><span class="line">chsh -s /usr/local/bin/zsh</span><br></pre></td></tr></table></figure><h3 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h3><ul><li>ohmyz <a href="https://ohmyz.sh/">https://ohmyz.sh/</a></li><li>github <a href="https://github.com/robbyrussell/oh-my-zsh">https://github.com/robbyrussell/oh-my-zsh</a></li></ul><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>查看主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.oh-my-zsh/themes</span><br></pre></td></tr></table></figure><p>修改zsh主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">source ~/.bash_profile   # 增加这行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker的使用</title>
      <link href="/2022/02/18/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/18/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h5 id="docker是什么"><a href="#docker是什么" class="headerlink" title="docker是什么"></a>docker是什么</h5><p>docker 可以帮我们磨平不同系统的应用程序的安装差异，一个命令，多系统无差别快速安装可以轻松的将项目安装在不同的机器上，本地、其他人的、公司内网公共测试服务器或者自己的某云服务器</p><p>Q： 为什么 docker 能帮我们磨平不同系统的应用程序的安装差异？</p><h5 id="docker基础"><a href="#docker基础" class="headerlink" title="docker基础"></a>docker基础</h5><ul><li><strong>镜像：</strong>就是像是我们装机时候需要的系统盘或者系统镜像文件，这里它负责创建docker容器的，有很多官方现成的镜像：node、mysql、monogo、nginx可以从远程仓库下载</li><li><strong>容器：</strong>可以比拟成一个迷你的系统，例如一个只安装mysql5.7的linux最小系统，当然你喜欢也可以把mysql、node安装在同一个容器中，记住，<strong>容器与容器，容器和主机都是互相隔离的</strong></li><li><strong>仓库：</strong>仓库就像是github那样的，我们可以制作镜像然后push 提交到云端的仓库，也可以从仓库 pull 下载镜像</li></ul><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>docker的安装很简单，win、osx都是图形界面安装，linux的也几行命令,现在的mac的m1芯片系列也支持了，这里我们先略过安装步骤，要快！先看完！</p><p><strong>ps:</strong> 在m1芯片的docker上安装mysql需要稍加点配置</p><p>安装完运行下方代码查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="创建运行docker容器"><a href="#创建运行docker容器" class="headerlink" title="创建运行docker容器"></a>创建运行docker容器</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 0 先进入我们项目的文件夹位置</span><br><span class="line">cd my-repository</span><br><span class="line"></span><br><span class="line"># 1 执行pwd可以获取当前文件夹在电脑的绝对目录</span><br><span class="line">pwd</span><br><span class="line"># /Users/eric/my-repository</span><br><span class="line"></span><br><span class="line"># 2 运行创建docker容器1：承载 react+webpack+nodejs10</span><br><span class="line">docker run -it -d --name myreact --privileged -p 8081:8080 -v  /Users/eric/my-repository/my-app-react:/app/react node:10.16.2 /bin/bash -c &quot;cd /app/react &amp;&amp; node -v &amp;&amp; npm install &amp;&amp; npm run serve&quot;</span><br><span class="line"></span><br><span class="line"># 3 运行创建docker容器2：承载 vue3+vite+nodejs12</span><br><span class="line">docker run -it -d --name myvue3 --privileged -p 8080:3000 -v /Users/eric/my-repository/my-app-vue3:/app/vue node:12.22.6 /bin/bash -c &quot;cd /app/vue &amp;&amp; node -v &amp;&amp; npm install &amp;&amp; npm run dev&quot;</span><br><span class="line"></span><br><span class="line"># 4 运行成功后 查看容器运行情况</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功运行后我们可以看到容器的启动状态、端口映射、容器名字</p><p>如果出错可运行如下命令查看原因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f container_id/containe_name</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个docker run 是可以用来创建同时启动运行容器<br>先换行来看 : shell 脚本太长的时候我们可以用 “&quot;把一行命令分成多行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-it \</span><br><span class="line">-d \ </span><br><span class="line">--name myreact \</span><br><span class="line">--privileged \</span><br><span class="line">-p 8081:8080 \</span><br><span class="line">-v /Users/eric/my-repository/my-app-react:/app/react \</span><br><span class="line">node:10.16.2 \</span><br><span class="line">/bin/bash -c &quot;cd /app/react &amp;&amp; node -v &amp;&amp; npm install &amp;&amp; npm run serve&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们可以使用 docker run 命令可以下载镜像 -&gt;通过镜像创建容器 -&gt;启动运行容器</p><p>参数解析：</p><table><thead><tr><th align="center">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">-d</td><td align="left">以守护进程的方式让容器在后台运行，在这您之 前可能使用的是pm2来守护进程</td></tr><tr><td align="center">-it</td><td align="left">这里是 -i和 -t的缩写<br>-i：告诉 Docker 容器保持标准输入流对容器开放,即使容器没有终端连接<br>告诉 Docker 为容器分配一个虚拟终端</td></tr><tr><td align="center">–name myreact</td><td align="left">将容器命名为 myreact2，这样访问和操作容 器等就不需要输入一大串的容器ID</td></tr><tr><td align="center">–privileged</td><td align="left">让容器的用户在容器内能获取完全root权限</td></tr><tr><td align="center">-p 8081:8080</td><td align="left">将容器的8080端口映射到宿主机的8081端口上<br>这样我们访问本机的localhost:8081,就是访问到容器的8080端口<br>因为容器都是独立运行互相隔离的，容器与容器各自的8080端口、容器跟主机各自的8080端口都不是一个东西，主机只有在这给端口做映射才能访问到容器端口</td></tr><tr><td align="center">-v /Users/eric/my-repository/my-app-react:/app/react</td><td align="left">将主机的my-app-react目录(命令行这里只能写绝对路径哈)下的内容挂载到容器的目录/app/react内<br>如果容器的指定目录有文件/文件夹，将被清空<br>挂载后，容器修改 /app/react目录的内容，也是在修改主机目录/Users/eric/my-repository/my-app-react内容</td></tr><tr><td align="center">node:10.16.2</td><td align="left">这里是指定nodejs，版本为10.16.2的镜像来创建容器<br>如果不指定版本，会默认下载当前镜像的最新版本</td></tr><tr><td align="center">/bin/bash -c “cd /app/react &amp;&amp; node -v &amp;&amp; npm install &amp;&amp; npm run serve”</td><td align="left">/bin/bash：是在让容器分配的虚拟终端以 bash 模式执行命令<br>-c “”cd /app/react &amp;&amp; node -v &amp;&amp; npm install &amp;&amp; npm run serve：只能执行一条 shell 命令，需要多个命令按需用&amp;&amp;、</td></tr></tbody></table><p><img src="/images/pasted-0.png" alt="docker run 的运行示意图"></p><p>上面代码运行成功后我们的电脑就会有两个互相隔离独立运行的docker容器</p><p><strong>node10+react+webpack</strong><br><strong>node+vue3+vite</strong></p><p>现在我们的电脑同事运行nodejs10、nodejs12的项目了他们是相互独立隔离运行的，以此类推我们还可以有更多的容器</p><h5 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h5><ul><li>常用的调试命令1<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f contianer_name/container_id</span><br></pre></td></tr></table></figure>当容器内正在进行编译或者发生错误甚至退出的时候，我们可用此命令查看终端输出的信息<br>例子运行成功后，查看myreact 容器的npm run serve 在终端上的实时输出信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f react</span><br></pre></td></tr></table></figure></li><li>常用的调试命令 2<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect react</span><br></pre></td></tr></table></figure></li></ul><h5 id="常用操作命令"><a href="#常用操作命令" class="headerlink" title="常用操作命令"></a>常用操作命令</h5><ul><li>常用的操作命令表一栏<br><img src="/images/pasted-1.png" alt="常用的操作命令表一栏"></li><li>镜像操作命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 搜索镜像</span><br><span class="line">docker search [images_name:tag]</span><br><span class="line"></span><br><span class="line"># 下载镜像（：指定版本）</span><br><span class="line">docker pull [images_name:tag]</span><br><span class="line"></span><br><span class="line"># 查看本地下载的镜像</span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"># 自己构建镜像</span><br><span class="line"># 根据dockerfile的路径或者url构建镜像</span><br><span class="line"> docker build [OPTIONS] PATH|URL|-</span><br><span class="line"></span><br><span class="line"># 查看镜像的构建历史</span><br><span class="line">docker history [images_name]</span><br><span class="line"></span><br><span class="line"># 删除镜像</span><br><span class="line"># 需要先删除以此镜像为基础的容器</span><br><span class="line"> docker rmi [images_name]</span><br></pre></td></tr></table></figure><ul><li>容器操作命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 查看运行中的容器</span><br><span class="line"># 可以查看容器ID、基础镜像、容器名称、运行状态、端口映射等</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"># 查看所有容器：包括停止的</span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"># 查看容器的信息</span><br><span class="line"># 例如端口号的映射、目录挂载</span><br><span class="line">docker inspect [images_name/images_id]</span><br><span class="line"></span><br><span class="line"># 启动和停止容器</span><br><span class="line">docker start/stop [container_name/container_id]</span><br><span class="line"></span><br><span class="line">#  重启容器</span><br><span class="line">#  使用场景实例：</span><br><span class="line">#  在加入新的npm包依赖需要重新编译的时候使用重启运行编译</span><br><span class="line">#  nginx容器的配置更新后需要重启生效</span><br><span class="line">docker restart [container_name/container_id]</span><br><span class="line"></span><br><span class="line"># 进入容器</span><br><span class="line"># ps:有些容器没有bash,需要改成/bin/sh，例如mysq、mongodb的</span><br><span class="line"># 退出人容器输入exit 回车键</span><br><span class="line">docker exec -it [container_name/container_id] /bin/bash</span><br><span class="line"></span><br><span class="line"># 删除容器</span><br><span class="line"># 在容器停止的状态才能删</span><br><span class="line">docker rm [container_name/container_id]</span><br><span class="line"></span><br><span class="line"># 容器主机文件拷</span><br><span class="line"># 将容器文件拷贝到主机</span><br><span class="line">docker cp [container_id/container_name] : [文件目录] [主机目录]</span><br><span class="line"></span><br><span class="line"># 将主机的目录拷贝到容器</span><br><span class="line">docker cp [主机目录] [container_id/container_name] : [文件目录]</span><br></pre></td></tr></table></figure><h5 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h5><p>果没有合适的镜像，我们通常用Dockerfile来构建自定义镜像<br>发现没，上面的<kbd>docker run</kbd> 只能创建启动一个docker容器，我们可以用<kbd>docker-compose</kbd>来一次启动多个容器，常用于单机下安装多个服务<br>慢点再来更新，大家有兴趣也可以先看到我用docker 部署的<a href="https://juejin.cn/post/6867861517603438605">Jenkins自动化部署 CI/CD 环境</a> 里面也有docker-compose的使用</p><p><img src="/images/pasted-5.png" alt="docker-compose的使用"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/11/hello-world/"/>
      <url>/2022/02/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 欢迎 嗨 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 欢迎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac查看端口</title>
      <link href="/2022/02/11/Mac%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3/"/>
      <url>/2022/02/11/Mac%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="Mac查看端口并杀死进程"><a href="#Mac查看端口并杀死进程" class="headerlink" title="Mac查看端口并杀死进程"></a>Mac查看端口并杀死进程</h4><pre><code>查看端口被那个进程占用sudo lsof -i tcp:8082利用进程的PID，将进程杀死sudo kill -9 PID</code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac指令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DS_Store 是什么</title>
      <link href="/2022/02/11/DS-Store-%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2022/02/11/DS-Store-%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<h3 id="DS-Store-是什么"><a href="#DS-Store-是什么" class="headerlink" title=".DS_Store 是什么"></a>.DS_Store 是什么</h3><p>之前用node批量做文件处理的时候突然发生了报错，之后发现是文件夹中多了DS_Store文件查询之后发现</p><p>.DS_Store(英文全称 Desktop Services Store)是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存储目录的自定义属性，例如文件的图标位置或者是背景色的选择。相当于 Windows 下的 desktop.ini。</p><h4 id="删除-DS-Store"><a href="#删除-DS-Store" class="headerlink" title="删除.DS_Store"></a>删除.DS_Store</h4><p>如果你的项目中还没有自动生成的 .DS_Store 文件，那么直接将 .DS_Store 加入到 .gitignore 文件就可以了。如果你的项目中已经存在 .DS_Store 文件，那就需要先从项目中将其删除，再将它加入到 .gitignore。如下：</p><pre><code>1. 删除项目中的所有.DS_Store。这会跳过不在项目中的 .DS_Storefind . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch2. 将 .DS_Store 加入到 .gitignore3. echo .DS_Store &gt;&gt; ~/.gitignore4. 更新项目5. git add --all6. git commit -m &#39;.DS_Store banished!&#39;</code></pre><p>如果你只需要删除磁盘上的 .DS_Store，可以使用下面的命令来删除当前目录及其子目录下的所有.DS_Store 文件:</p><pre><code>find . -name &#39;*.DS_Store&#39; -type f -delete</code></pre><p>禁用或启用自动生成<br>禁止.DS_store生成：</p><pre><code>defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</code></pre><p>恢复.DS_store生成：恢复.DS_store生成：</p><pre><code>defaults delete com.apple.desktopservices DSDontWriteNetworkStores</code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac指令 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/2022/01/21/about/"/>
      <url>/2022/01/21/about/</url>
      
        <content type="html"><![CDATA[<h3 id="博客搭建利用的技术"><a href="#博客搭建利用的技术" class="headerlink" title="博客搭建利用的技术"></a>博客搭建利用的技术</h3><ul><li><a href="https://hexo.io/zh-cn/">Hexo</a>: 快速、简洁且高效的博客框架</li><li><a href="https://butterfly.js.org/">Butterfly</a>: Hexo的主题，可以让我们的博客更加的好看</li><li><a href="https://valine.js.org/">twikoo</a>: 一款快速、简洁且高效的无后端评论系统，因为暂时没有图床的原因，图片会默认被转为 base64 进行保存</li><li><a href="https://jaredforsyth.com/hexo-admin/">Hexo-admin</a> 一款可以管理静态博客的后台，目前是pm2跑在阿里云服务器中</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li>仅支持markdown语法</li><li>添加pages或者posts的操作可以参考 <a href="https://hexo.io/zh-cn/docs/writing">Hexo写作</a></li><li>写作可以把代码中编辑之后执行hexo clean &amp;&amp; hexo deploy 也可以在admin 中直接写作 然后点击导航中的 Deploy 生成 html 并部署，部署的时候可以添加commit信息，因为admin是一下子引入的所以体积比较大，会加载一段时间</li></ul>]]></content>
      
      
      <categories>
          
          <category> 关于 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
